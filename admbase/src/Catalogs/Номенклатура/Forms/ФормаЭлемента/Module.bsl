#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	УстановитьЗначенияПеременныхНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	УстановитьВидимостьЗаголовкиНаКлиенте();
	УстановитьДоступностьНаКлиенте(Объект.Ссылка.Пустая());

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	ЭлементМодифицирован = Истина;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТекущийОбъект.ВидНоменклатуры = Справочники.ВидыНоменклатуры.Блюда Тогда
		 ТекущийОбъект.ДляМеню = Истина;
		 ТекущийОбъект.ДляРецептов = Ложь; 
	ИначеЕсли ТекущийОбъект.ВидНоменклатуры = Справочники.ВидыНоменклатуры.Меню Тогда
		 ТекущийОбъект.ДляМеню = Ложь;
		 ТекущийОбъект.ДляРецептов = Ложь;         
	КонецЕсли;	
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УстановитьДоступностьНаКлиенте(Объект.Ссылка.Пустая());
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЭлементМодифицирован И Объект.ВидНоменклатуры = ПредопределенноеЗначение("Справочник.ВидыНоменклатуры.Меню") Тогда
		Оповестить("ЗакрытаФормаМеню")
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	Объект.НаименованиеПолное = Объект.Наименование;
КонецПроцедуры

&НаКлиенте
Процедура ВидНоменклатурыПриИзменении(Элемент)
	
	УстановитьЗначенияПеременныхНаСервере();

	УстановитьВидимостьЗаголовкиНаКлиенте();
	
	Если  ЭтоМеню Тогда
		Объект.ЕдиницаИзмерения = Неопределено;
	Иначе
		Объект.КатегорияМеню = Неопределено;
	КонецЕсли;
	
	Если ЭтоПродукты Тогда
		Объект.СоставНабора.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмеренияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ЕдиницаНачалоВыбораСтандартнаяОбработка(СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмеренияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	ЕдиницаНачалоВыбораСтандартнаяОбработка(СтандартнаяОбработка);
КонецПроцедуры

//@skip-check module-structure-form-event-regions
&НаКлиенте
Процедура ЕдиницаНачалоВыбораСтандартнаяОбработка(СтандартнаяОбработка)
	
	Если  Объект.Ссылка.Пустая() Тогда
		ПередЗаписьюНовойЕдиницы();
	КонецЕсли;
	
КонецПроцедуры // ЕдиницаНачалоВыбораСтандартнаяОбработка()


&НаКлиенте
Процедура КатегорияМенюПриИзменении(Элемент)
	ФормироватьНаименование();
КонецПроцедуры

&НаКлиенте
Процедура ВидСтолаПриИзменении(Элемент)
	ФормироватьНаименование();
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	
	Если Объект.ЕдиницаДляРецептов.Пустая() Тогда
		Объект.ЕдиницаДляРецептов 		= Объект.ЕдиницаИзмерения;
		Объект.СодержитЕдиницХранения 	= 1;
	КонецЕсли;	
	
	УстановитьВидимостьЗаголовкиНаКлиенте();

КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаДляРецептовПриИзменении(Элемент)
	
	Если Объект.ЕдиницаДляРецептов <> Объект.ЕдиницаИзмерения Тогда
		Объект.СодержитЕдиницХранения 	= 0;
	КонецЕсли;	

	УстановитьВидимостьЗаголовкиНаКлиенте();

КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовТаблицыФормыСоставНабора


&НаКлиенте
Процедура СоставНабораНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура;
	
	Если ЭтоБлюдо Тогда
		//ПараметрыФормы.Вставить("ВидНоменклатуры",ПредопределенноеЗначение("Справочник.ВидыНоменклатуры.Продукты"));
		ПараметрыФормы.Вставить("ДляРецептов",Истина);
	Иначе //для меню
		//Массив = Новый Массив;
		//Массив.Добавить(ПредопределенноеЗначение("Справочник.ВидыНоменклатуры.Продукты"));
		//Массив.Добавить(ПредопределенноеЗначение("Справочник.ВидыНоменклатуры.Блюда"));
		//ПараметрыФормы.Вставить("СоставМеню",Массив);
		ПараметрыФормы.Вставить("ДляМеню",Истина);
	КонецЕсли;	
	
	ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора",ПараметрыФормы,Элемент);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РазрешитьРедактирование(Команда)
	
	Если РазрешитьРедактированиеНаСервере(Объект.Ссылка) Тогда 
		УстановитьДоступностьНаКлиенте(Истина);
	Иначе
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Номенклатура использована в документах или рецептах. Редактирование запрещено";
		СообщениеПользователю.Сообщить();
	КонецЕсли;
	
КонецПроцедуры

//@skip-check module-structure-form-event-regions
&НаСервереБезКонтекста
Функция  РазрешитьРедактированиеНаСервере(Ссылка)
	
	Если Не ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Истина)
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
#Область ТекстЗапроса
Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
|	1 КАК ИмяПоля
|ИЗ
|	РегистрСведений.КалендарьМеню КАК КалендарьМеню
|ГДЕ
|	КалендарьМеню.Меню = &Ссылка
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ ПЕРВЫЕ 1
|	1
|ИЗ
|	РегистрСведений.ПлановыйПотребленияПродуктов КАК ПлановыйПотребленияПродуктов
|ГДЕ
|	ПлановыйПотребленияПродуктов.Номенклатура = &Ссылка
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ ПЕРВЫЕ 1
|	1
|ИЗ
|	РегистрСведений.ЦеныПоставщиков КАК ЦеныПоставщиков
|ГДЕ
|	ЦеныПоставщиков.Номенклатура = &Ссылка
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ ПЕРВЫЕ 1
|	1
|ИЗ
|	РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
|ГДЕ
|	ЦеныНоменклатуры.Номенклатура = &Ссылка
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ ПЕРВЫЕ 1
|	1
|ИЗ
|	РегистрНакопления.ИзготовлениеБлюд КАК ИзготовлениеБлюд
|ГДЕ
|	ИзготовлениеБлюд.Номенклатура = &Ссылка
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ ПЕРВЫЕ 1
|	1
|ИЗ
|	РегистрНакопления.ЗакупкиУПоставщиков КАК ЗакупкиУПоставщиков
|ГДЕ
|	ЗакупкиУПоставщиков.Номенклатура = &Ссылка
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ ПЕРВЫЕ 1
|	1
|ИЗ
|	РегистрНакопления.ОстаткиПродуктовНаСкладах КАК ОстаткиПродуктовНаСкладах
|ГДЕ
|	ОстаткиПродуктовНаСкладах.Номенклатура = &Ссылка
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ ПЕРВЫЕ 1
|	1
|ИЗ
|	Документ.ИнвентаризацияТоваров.Товары КАК ИнвентаризацияТоваровТовары
|ГДЕ
|	ИнвентаризацияТоваровТовары.Номенклатура = &Ссылка
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ ПЕРВЫЕ 1
|	1
|ИЗ
|	Документ.ОприходованиеТоваров.Товары КАК ОприходованиеТоваровТовары
|ГДЕ
|	ОприходованиеТоваровТовары.Номенклатура = &Ссылка
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ ПЕРВЫЕ 1
|	1
|ИЗ
|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
|ГДЕ
|	ПеремещениеТоваровТовары.Номенклатура = &Ссылка
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ ПЕРВЫЕ 1
|	1
|ИЗ
|	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
|ГДЕ
|	ПоступлениеТоваровТовары.Номенклатура = &Ссылка
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ ПЕРВЫЕ 1
|	1
|ИЗ
|	Документ.РасходПродуктов КАК РасходПродуктов
|ГДЕ
|	РасходПродуктов.Номенклатура = &Ссылка
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ ПЕРВЫЕ 1
|	1
|ИЗ
|	Документ.РасходПродуктов.СоставСтола КАК РасходПродуктовСоставСтола
|ГДЕ
|	РасходПродуктовСоставСтола.Номенклатура = &Ссылка
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ ПЕРВЫЕ 1
|	1
|ИЗ
|	Документ.РасходПродуктов.Продукты КАК РасходПродуктовПродукты
|ГДЕ
|	РасходПродуктовПродукты.Номенклатура = &Ссылка
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ ПЕРВЫЕ 1
|	1
|ИЗ
|	Документ.СписаниеТоваров.Товары КАК СписаниеТоваровТовары
|ГДЕ
|	СписаниеТоваровТовары.Номенклатура = &Ссылка
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ ПЕРВЫЕ 1
|	1
|ИЗ
|	Документ.УстановкаРасчетЦенНоменклатуры.ЦеныПродуктов КАК УстановкаРасчетЦенНоменклатурыЦеныПродуктов
|ГДЕ
|	УстановкаРасчетЦенНоменклатурыЦеныПродуктов.Номенклатура = &Ссылка
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ ПЕРВЫЕ 1
|	1
|ИЗ
|	Документ.УстановкаРасчетЦенНоменклатуры.ЦеныБлюд КАК УстановкаРасчетЦенНоменклатурыЦеныБлюд
|ГДЕ
|	УстановкаРасчетЦенНоменклатурыЦеныБлюд.Номенклатура = &Ссылка
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ ПЕРВЫЕ 1
|	1
|ИЗ
|	Документ.УстановкаРасчетЦенНоменклатуры.ЦеныМеню КАК УстановкаРасчетЦенНоменклатурыЦеныМеню
|ГДЕ
|	УстановкаРасчетЦенНоменклатурыЦеныМеню.Номенклатура = &Ссылка";
	
#КонецОбласти

	Возврат Запрос.Выполнить().Пустой();
	
КонецФункции
	
#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьВидимостьЗаголовкиНаКлиенте()
	
	Если ЭтоМеню Или ЭтоБлюдо Тогда
		Элементы.СоставНабора.Видимость = Истина;
		Элементы.ЕдиницаДляРецептов.Видимость  = Ложь;
		Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.ЗакладкиСверху;
	Иначе
		Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	КонецЕсли;
	
	Элементы.КатегорияМеню.Видимость 	= ЭтоМеню;
	Элементы.ВидСтола.Видимость 		= ЭтоМеню;
	
	Элементы.ЕдиницаИзмерения.Видимость = Не ЭтоМеню;
	
	Элементы.КоличествоБлюд.Видимость = ЭтоБлюдо;
	
	Элементы.ДляМеню.Видимость 		= ЭтоПродукты;
	Элементы.ДляРецептов.Видимость 	= ЭтоПродукты;
	
	Элементы.СодержитЕдиницХранения.Видимость = Объект.ЕдиницаИзмерения <> Объект.ЕдиницаДляРецептов
		И Не Объект.ЕдиницаДляРецептов.Пустая();
	Элементы.СодержитЕдиницХранения.Заголовок = СтрШаблон("%1 в 1 %2",Строка(Объект.ЕдиницаДляРецептов),Строка(Объект.ЕдиницаИзмерения));
	
КонецПроцедуры // УстановитьВидимостьЗаголовкиНаКлиенте()

&НаСервере
Процедура ПередЗаписьюНовойЕдиницы()
	
	СправочникОбъект = РеквизитФормыВЗначение("Объект");
	СправочникОбъект.ДополнительныеСвойства.Вставить("НеПроверятьЕдиницу",Истина);
	СправочникОбъект.Записать();
	ЗначениеВРеквизитФормы(СправочникОбъект,"Объект");

КонецПроцедуры // ПередЗаписьюНовойЕдиницы()

&НаСервере
Процедура УстановитьЗначенияПеременныхНаСервере()

	ЭтоМеню 	= Объект.ВидНоменклатуры = Справочники.ВидыНоменклатуры.Меню;	
	ЭтоБлюдо 	= Объект.ВидНоменклатуры = Справочники.ВидыНоменклатуры.Блюда;	
	ЭтоПродукты	= Объект.ВидНоменклатуры = Справочники.ВидыНоменклатуры.Продукты;
	
	Если ЭтоМеню Тогда
		Элементы.Страницы.ПодчиненныеЭлементы.СтраницаСостав.Заголовок = "Состав меню";
	КонецЕсли;
	
	Если ЭтоБлюдо Тогда
		Элементы.Страницы.ПодчиненныеЭлементы.СтраницаСостав.Заголовок = "Рецепт";
	КонецЕсли;
	
	Если Не (ЭтоБлюдо Или ЭтоМеню) Тогда
		Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	КонецЕсли; 
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Состояние = Перечисления.СостояниеБлюда.Формируется;
	КонецЕсли;

КонецПроцедуры // УстановитьЗначенияПеременныхНаСервере()

&НаКлиенте
Процедура ФормироватьНаименование()

	Объект.Наименование = СтрШаблон("%1 %2",Строка(Объект.ВидСтола),Строка(Объект.КатегорияМеню));
	Объект.НаименованиеПолное = Объект.Наименование;

КонецПроцедуры // ФормироватьНаименование()

&НаКлиенте
Процедура УстановитьДоступностьНаКлиенте(ТекущаяДоступность)

	//ТекущаяДоступность = Объект.Ссылка.Пустая();
	
	Элементы.ЕдиницаДляРецептов.Доступность = ТекущаяДоступность;
	Элементы.ЕдиницаИзмерения.Доступность 	= ТекущаяДоступность;
	Элементы.ВидНоменклатуры.Доступность 	= ТекущаяДоступность;
	Элементы.КатегорияМеню.Доступность 		= ТекущаяДоступность;
	Элементы.ВидСтола.Доступность 			= ТекущаяДоступность;
	Элементы.СоставНабора.Доступность		= ТекущаяДоступность;

КонецПроцедуры // УстановитьДоступностьНаКлиенте()

 // СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти 