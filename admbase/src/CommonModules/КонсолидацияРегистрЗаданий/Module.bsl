////////////////////////////////////////////////////////////////////////////////
// <Заголовок модуля: краткое описание и условия применения модуля.>
//  
////////////////////////////////////////////////////////////////////////////////
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
// Записать первичные данные в регистр заданий.
// 
// Параметры:
//  Отказ 			-	Булево
//  ЗаданияРасчета 	- 	ПеречислениеСсылка.ЗаданияРасчета
//  Ссылка 			- 	ДокументСсылка
//  Дата 			-	Дата
//  Проведен 		-	Булево
//  ПометкаУдаления - 	Булево
Процедура ЗаписатьПервичныеДанныеВРегистрЗаданий(Отказ, ЗаданияРасчета, Ссылка , Дата, Проведен, ПометкаУдаления) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Месяц",			НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ЗаданиеРасчета",	ЗаданияРасчета);
	
#Область ТекстЗапроса
		
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗаданияРасчета.Ссылка КАК ЗаданиеРасчета,
	|	ЗаданияРасчета.Порядок КАК НомерЗадания
	|ПОМЕСТИТЬ ПеречислениеЗадания
	|ИЗ
	|	Перечисление.ЗаданияРасчета КАК ЗаданияРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаданияНаРасчетРабочегоВремени.Месяц КАК Месяц,
	|	ЗаданияНаРасчетРабочегоВремени.ЗаданиеРасчета КАК ЗаданиеРасчета,
	|	ЗаданияНаРасчетРабочегоВремени.Выполнен КАК Выполнен,
	|	ЗаданияНаРасчетРабочегоВремени.НеВыполнять КАК НеВыполнять,
	|	ЗаданияНаРасчетРабочегоВремени.НомерЗадания КАК НомерЗадания,
	|	ЗаданияНаРасчетРабочегоВремени.Документ КАК Документ,
	|	ЗаданияНаРасчетРабочегоВремени.РасчетМесяцаВыполнен КАК РасчетМесяцаВыполнен
	|ПОМЕСТИТЬ РегистрРасчета
	|ИЗ
	|	РегистрСведений.ЗаданияНаРасчетРабочегоВремени КАК ЗаданияНаРасчетРабочегоВремени
	|ГДЕ
	|	ЗаданияНаРасчетРабочегоВремени.Месяц = &Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	&Месяц КАК Месяц,
	|	ПеречислениеЗадания.ЗаданиеРасчета КАК ЗаданиеРасчета,
	|	ЕСТЬNULL(РегистрРасчета.Выполнен, ЛОЖЬ) КАК Выполнен,
	|	ЕСТЬNULL(РегистрРасчета.НеВыполнять, ЛОЖЬ) КАК НеВыполнять,
	|	ПеречислениеЗадания.НомерЗадания КАК НомерЗадания,
	|	ЕСТЬNULL(РегистрРасчета.Документ, НЕОПРЕДЕЛЕНО) КАК Документ,
	|	ЕСТЬNULL(РегистрРасчета.РасчетМесяцаВыполнен, ЛОЖЬ) КАК РасчетМесяцаВыполнен
	|ПОМЕСТИТЬ РегистрЗаданий
	|ИЗ
	|	ПеречислениеЗадания КАК ПеречислениеЗадания
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета КАК РегистрРасчета
	|		ПО ПеречислениеЗадания.ЗаданиеРасчета = РегистрРасчета.ЗаданиеРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрЗаданий.Месяц КАК Месяц,
	|	РегистрЗаданий.ЗаданиеРасчета КАК ЗаданиеРасчета,
	|	РегистрЗаданий.Выполнен КАК Выполнен,
	|	РегистрЗаданий.НеВыполнять КАК НеВыполнять,
	|	РегистрЗаданий.НомерЗадания КАК НомерЗадания,
	|	РегистрЗаданий.Документ КАК Документ,
	|	РегистрЗаданий.РасчетМесяцаВыполнен КАК РасчетМесяцаВыполнен
	|ИЗ
	|	РегистрЗаданий КАК РегистрЗаданий
	|ГДЕ
	|	РегистрЗаданий.ЗаданиеРасчета = &ЗаданиеРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрЗаданий.Месяц КАК Месяц,
	|	РегистрЗаданий.ЗаданиеРасчета КАК ЗаданиеРасчета,
	|	РегистрЗаданий.Выполнен КАК Выполнен,
	|	РегистрЗаданий.НеВыполнять КАК НеВыполнять,
	|	РегистрЗаданий.НомерЗадания КАК НомерЗадания,
	|	РегистрЗаданий.Документ КАК Документ,
	|	РегистрЗаданий.РасчетМесяцаВыполнен КАК РасчетМесяцаВыполнен
	|ИЗ
	|	РегистрЗаданий КАК РегистрЗаданий
	|ГДЕ
	|	РегистрЗаданий.ЗаданиеРасчета = ЗНАЧЕНИЕ(Перечисление.ЗаданияРасчета.РасчетРабочегоВремени)";
#КонецОбласти
	
	Результат = Запрос.ВыполнитьПакет();
	
	Выборка = Результат[Результат.ВГраница()-1].Выбрать();
	Выборка.Следующий();
	
	
	Если Выборка.Документ = Неопределено Или Выборка.Документ = Ссылка Или Выборка.Документ.Пустая() Тогда
	               
		НаборЗаписей = РегистрыСведений.ЗаданияНаРасчетРабочегоВремени.СоздатьНаборЗаписей();
	    НаборЗаписей.Отбор.Месяц.Установить(Выборка.Месяц);
	    НаборЗаписей.Отбор.ЗаданиеРасчета.Установить(Выборка.ЗаданиеРасчета);
		НоваяЗапись = НаборЗаписей.Добавить();
		
		НоваяЗапись.Месяц 					= Выборка.Месяц;
		НоваяЗапись.ЗаданиеРасчета 			= Выборка.ЗаданиеРасчета;
		НоваяЗапись.Выполнен 				= Проведен;
		НоваяЗапись.НеВыполнять 			= Ложь;
		НоваяЗапись.НомерЗадания 			= Выборка.НомерЗадания;
		НоваяЗапись.Документ 				= ?(ПометкаУдаления, Неопределено, Ссылка);
		НоваяЗапись.РасчетМесяцаВыполнен 	= Ложь;
		
		НаборЗаписей.Записать();

		//Расчет
		ВыборкаРасчет = Результат[Результат.ВГраница()].Выбрать();
		ВыборкаРасчет.Следующий();

		НаборЗаписей = РегистрыСведений.ЗаданияНаРасчетРабочегоВремени.СоздатьНаборЗаписей();
	    НаборЗаписей.Отбор.Месяц.Установить(ВыборкаРасчет.Месяц);
	    НаборЗаписей.Отбор.ЗаданиеРасчета.Установить(ВыборкаРасчет.ЗаданиеРасчета);
		НоваяЗапись = НаборЗаписей.Добавить();
		
		НоваяЗапись.Месяц 					= ВыборкаРасчет.Месяц;
		НоваяЗапись.ЗаданиеРасчета 			= ВыборкаРасчет.ЗаданиеРасчета;
		НоваяЗапись.Выполнен 				= Ложь;
		НоваяЗапись.НеВыполнять 			= Ложь;
		НоваяЗапись.НомерЗадания 			= ВыборкаРасчет.НомерЗадания;
		НоваяЗапись.Документ 				= ВыборкаРасчет.Документ;
		НоваяЗапись.РасчетМесяцаВыполнен 	= Ложь;
		
		НаборЗаписей.Записать();

	Иначе
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон("За выбранный период уже есть док-т %1",Строка(Выборка.Документ)),,,,Отказ);
	КонецЕсли;

КонецПроцедуры

// Отменяет выбранное задание и снимает флаг с задания "Расчет учета времени"
// 
// Параметры:
//  ЗаданияРасчета - ПеречислениеСсылка.ЗаданияРасчета
//  Дата -Дата
Процедура ОтменитьРегистрациюРасчетаПоДате(ЗаданияРасчета,Дата) Экспорт 

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Месяц",			НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ЗаданиеРасчета",	ЗаданияРасчета);
	
#Область ТекстЗапроса
		
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗаданияРасчета.Ссылка КАК ЗаданиеРасчета,
	|	ЗаданияРасчета.Порядок КАК НомерЗадания
	|ПОМЕСТИТЬ ПеречислениеЗадания
	|ИЗ
	|	Перечисление.ЗаданияРасчета КАК ЗаданияРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаданияНаРасчетРабочегоВремени.Месяц КАК Месяц,
	|	ЗаданияНаРасчетРабочегоВремени.ЗаданиеРасчета КАК ЗаданиеРасчета,
	|	ЗаданияНаРасчетРабочегоВремени.Выполнен КАК Выполнен,
	|	ЗаданияНаРасчетРабочегоВремени.НеВыполнять КАК НеВыполнять,
	|	ЗаданияНаРасчетРабочегоВремени.НомерЗадания КАК НомерЗадания,
	|	ЗаданияНаРасчетРабочегоВремени.Документ КАК Документ,
	|	ЗаданияНаРасчетРабочегоВремени.РасчетМесяцаВыполнен КАК РасчетМесяцаВыполнен
	|ПОМЕСТИТЬ РегистрРасчета
	|ИЗ
	|	РегистрСведений.ЗаданияНаРасчетРабочегоВремени КАК ЗаданияНаРасчетРабочегоВремени
	|ГДЕ
	|	ЗаданияНаРасчетРабочегоВремени.Месяц = &Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	&Месяц КАК Месяц,
	|	ПеречислениеЗадания.ЗаданиеРасчета КАК ЗаданиеРасчета,
	|	ЕСТЬNULL(РегистрРасчета.Выполнен, ЛОЖЬ) КАК Выполнен,
	|	ЕСТЬNULL(РегистрРасчета.НеВыполнять, ЛОЖЬ) КАК НеВыполнять,
	|	ПеречислениеЗадания.НомерЗадания КАК НомерЗадания,
	|	ЕСТЬNULL(РегистрРасчета.Документ, НЕОПРЕДЕЛЕНО) КАК Документ,
	|	ЕСТЬNULL(РегистрРасчета.РасчетМесяцаВыполнен, ЛОЖЬ) КАК РасчетМесяцаВыполнен
	|ПОМЕСТИТЬ РегистрЗаданий
	|ИЗ
	|	ПеречислениеЗадания КАК ПеречислениеЗадания
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета КАК РегистрРасчета
	|		ПО ПеречислениеЗадания.ЗаданиеРасчета = РегистрРасчета.ЗаданиеРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрЗаданий.Месяц КАК Месяц,
	|	РегистрЗаданий.ЗаданиеРасчета КАК ЗаданиеРасчета,
	|	РегистрЗаданий.Выполнен КАК Выполнен,
	|	РегистрЗаданий.НеВыполнять КАК НеВыполнять,
	|	РегистрЗаданий.НомерЗадания КАК НомерЗадания,
	|	РегистрЗаданий.Документ КАК Документ,
	|	РегистрЗаданий.РасчетМесяцаВыполнен КАК РасчетМесяцаВыполнен
	|ИЗ
	|	РегистрЗаданий КАК РегистрЗаданий
	|ГДЕ
	|	РегистрЗаданий.ЗаданиеРасчета = &ЗаданиеРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрЗаданий.Месяц КАК Месяц,
	|	РегистрЗаданий.ЗаданиеРасчета КАК ЗаданиеРасчета,
	|	РегистрЗаданий.Выполнен КАК Выполнен,
	|	РегистрЗаданий.НеВыполнять КАК НеВыполнять,
	|	РегистрЗаданий.НомерЗадания КАК НомерЗадания,
	|	РегистрЗаданий.Документ КАК Документ,
	|	РегистрЗаданий.РасчетМесяцаВыполнен КАК РасчетМесяцаВыполнен
	|ИЗ
	|	РегистрЗаданий КАК РегистрЗаданий
	|ГДЕ
	|	РегистрЗаданий.ЗаданиеРасчета = ЗНАЧЕНИЕ(Перечисление.ЗаданияРасчета.РасчетРабочегоВремени)";
	
#КонецОбласти
	
	Результат = Запрос.ВыполнитьПакет();

	Выборка = Результат[Результат.ВГраница()-1].Выбрать();
	Выборка.Следующий();


	//Задание
	НаборЗаписей = РегистрыСведений.ЗаданияНаРасчетРабочегоВремени.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Месяц.Установить(Выборка.Месяц);
	НаборЗаписей.Отбор.ЗаданиеРасчета.Установить(Выборка.ЗаданиеРасчета);
	НоваяЗапись = НаборЗаписей.Добавить();

	НоваяЗапись.Месяц 					= Выборка.Месяц;
	НоваяЗапись.ЗаданиеРасчета 			= Выборка.ЗаданиеРасчета;
	НоваяЗапись.Выполнен 				= Ложь;
	НоваяЗапись.НеВыполнять 			= Ложь;
	НоваяЗапись.НомерЗадания 			= Выборка.НомерЗадания;
	НоваяЗапись.Документ 				= Неопределено;
	НоваяЗапись.РасчетМесяцаВыполнен 	= Ложь;

	НаборЗаписей.Записать();

	//Расчет
	ВыборкаРасчет = Результат[Результат.ВГраница()].Выбрать();
	ВыборкаРасчет.Следующий();

	НаборЗаписей = РегистрыСведений.ЗаданияНаРасчетРабочегоВремени.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Месяц.Установить(ВыборкаРасчет.Месяц);
	НаборЗаписей.Отбор.ЗаданиеРасчета.Установить(ВыборкаРасчет.ЗаданиеРасчета);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() <> 0 Тогда 

		ЗаписьРегистра = НаборЗаписей[0];
		
		ЗаписьРегистра.Месяц 					= ВыборкаРасчет.Месяц;
		ЗаписьРегистра.ЗаданиеРасчета 			= ВыборкаРасчет.ЗаданиеРасчета;
		ЗаписьРегистра.Выполнен 				= Ложь;
		ЗаписьРегистра.НеВыполнять 			= Ложь;
		ЗаписьРегистра.НомерЗадания 			= ВыборкаРасчет.НомерЗадания;
		ЗаписьРегистра.Документ 				= ВыборкаРасчет.Документ;
		ЗаписьРегистра.РасчетМесяцаВыполнен 	= Ложь;
		
		НаборЗаписей.Записать();
		
	КонецЕсли;

КонецПроцедуры

// Отменяет выполненные задания "Расчет учета времени"
// по переданному массиву дат
// 
// Параметры:
//  МассивДаты - Дата - Массив
Процедура ОтменитьРассчетВремениВПериоде(МассивДаты) Экспорт 

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДаты",МассивДаты);
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗаданияНаРасчетРабочегоВремени.Месяц КАК Месяц,
	|	ЗаданияНаРасчетРабочегоВремени.ЗаданиеРасчета КАК ЗаданиеРасчета,
	|	ЗаданияНаРасчетРабочегоВремени.Выполнен КАК Выполнен,
	|	ЗаданияНаРасчетРабочегоВремени.НеВыполнять КАК НеВыполнять,
	|	ЗаданияНаРасчетРабочегоВремени.НомерЗадания КАК НомерЗадания,
	|	ЗаданияНаРасчетРабочегоВремени.Документ КАК Документ,
	|	ЗаданияНаРасчетРабочегоВремени.РасчетМесяцаВыполнен КАК РасчетМесяцаВыполнен
	|ИЗ
	|	РегистрСведений.ЗаданияНаРасчетРабочегоВремени КАК ЗаданияНаРасчетРабочегоВремени
	|ГДЕ
	|	ЗаданияНаРасчетРабочегоВремени.Месяц В(&МассивДаты)
	|	И ЗаданияНаРасчетРабочегоВремени.ЗаданиеРасчета = ЗНАЧЕНИЕ(Перечисление.ЗаданияРасчета.РасчетРабочегоВремени)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
	
		НаборЗаписей = РегистрыСведений.ЗаданияНаРасчетРабочегоВремени.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Месяц.Установить(Выборка.Месяц);
		НаборЗаписей.Отбор.ЗаданиеРасчета.Установить(Выборка.ЗаданиеРасчета);
		НоваяЗапись = НаборЗаписей.Добавить();
		
		НоваяЗапись.Месяц 					= Выборка.Месяц;
		НоваяЗапись.ЗаданиеРасчета 			= Выборка.ЗаданиеРасчета;
		НоваяЗапись.Выполнен 				= Ложь;
		НоваяЗапись.НеВыполнять 			= Ложь;
		НоваяЗапись.НомерЗадания 			= Выборка.НомерЗадания;
		НоваяЗапись.Документ 				= Выборка.Документ;
		НоваяЗапись.РасчетМесяцаВыполнен 	= Ложь;
		
		НаборЗаписей.Записать();
	
	КонецЦикла;
	

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Есть расчет за выбранную дату.
// 
// Параметры:
//  ДатаЗапроса - Дата
// 
// Возвращаемое значение:
//  Булево - Есть расчет за выбранную дату
Функция ЕстьРасчетЗаВыбраннуюДату(ДатаЗапроса) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Месяц",НачалоМесяца(ДатаЗапроса));
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗаданияНаРасчетРабочегоВремени.ЗаданиеРасчета КАК ЗаданиеРасчета
	|ИЗ
	|	РегистрСведений.ЗаданияНаРасчетРабочегоВремени КАК ЗаданияНаРасчетРабочегоВремени
	|ГДЕ
	|	ЗаданияНаРасчетРабочегоВремени.Месяц = &Месяц
	|	И ЗаданияНаРасчетРабочегоВремени.ЗаданиеРасчета = ЗНАЧЕНИЕ(Перечисление.ЗаданияРасчета.РасчетРабочегоВремени)
	|	И ЗаданияНаРасчетРабочегоВремени.Выполнен";

	Возврат Не Запрос.Выполнить().Пустой();

КонецФункции // ЕстьРасчетЗаВыбраннуюДату()
#КонецОбласти  

#КонецЕсли

