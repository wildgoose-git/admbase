////////////////////////////////////////////////////////////////////////////////
// <Заголовок модуля: краткое описание и условия применения модуля.>
//  
////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;	
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ЗаполнитьСлужебныеРеквизиты();

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗаполнитьСлужебныеРеквизиты();
КонецПроцедуры
	
#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоФактПриИзменении(Элемент)
	
	СтрокаТаблицы = Элементы.Товары.ТекущиеДанные;
	СтрокаТаблицы.ВесФакт 		= СтрокаТаблицы.ВесЕдиницы * СтрокаТаблицы.КоличествоФакт;              
	СтрокаТаблицы.Расхождение 	= СтрокаТаблицы.Количество - СтрокаТаблицы.КоличествоФакт;

КонецПроцедуры

&НаКлиенте
Процедура ТоварыЕдиницаИзмеренияПриИзменении(Элемент)
	
	РассчетВесаНоменклатуры(Элементы.Товары.ТекущаяСтрока);
	
	СтрокаТаблицы = Элементы.Товары.ТекущиеДанные;
	СтрокаТаблицы.ВесФакт = СтрокаТаблицы.ВесЕдиницы * СтрокаТаблицы.КоличествоФакт;              

КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	РассчетВесаНоменклатуры(Элементы.Товары.ТекущаяСтрока);
	
	СтрокаТаблицы = Элементы.Товары.ТекущиеДанные;
	СтрокаТаблицы.ВесФакт = СтрокаТаблицы.ВесЕдиницы * СтрокаТаблицы.КоличествоФакт;              

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПоОстаткам(Команда)
	ЗаполнитьПоОстаткамНаСервере();
КонецПроцедуры


#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

//@skip-check module-structure-form-event-regions
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
#КонецОбласти 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьПоОстаткамНаСервере()
	
	Если  Не ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Истина)
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МестоХранения",Объект.МестоХранения);
	Запрос.Текст = "ВЫБРАТЬ
	|	ОстаткиПродуктов.Номенклатура КАК Номенклатура,
	|	ОстаткиПродуктов.КоличествоОстаток КАК Количество,
	|	ОстаткиПродуктов.КоличествоОстаток КАК КоличествоФакт,
	|	ЕСТЬNULL(СправочникНоменклатура.ЕдиницаИзмерения.Вес, 0) * ОстаткиПродуктов.КоличествоОстаток КАК Вес,
	|	ЕСТЬNULL(СправочникНоменклатура.ЕдиницаИзмерения.Вес, 0) * ОстаткиПродуктов.КоличествоОстаток КАК ВесФакт,
	|	СправочникНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	РегистрНакопления.ОстаткиПродуктовНаСкладах.Остатки(, МестоХранения = &МестоХранения) КАК ОстаткиПродуктов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ОстаткиПродуктов.Номенклатура = СправочникНоменклатура.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	СправочникНоменклатура.Наименование";
	
	Объект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	
	ЗаполнитьСлужебныеРеквизиты();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСлужебныеРеквизиты()
	
	СтоловаяФункцииПроцедуры.ЗаполнитьВесЕдиницыИзмерения(Объект.Товары);
	
	Для каждого СтрокаТаблицы Из Объект.Товары  Цикл
		СтрокаТаблицы.Расхождение = СтрокаТаблицы.Количество - СтрокаТаблицы.КоличествоФакт
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьСлужебныеРеквизиты()

&НаСервере
Процедура РассчетВесаНоменклатуры(Идентификатор)
	СтоловаяФункцииПроцедуры.РассчетВесаНоменклатуры(Идентификатор,Объект,"Товары");
КонецПроцедуры // РассчетВесаНоменклатуры()


#КонецОбласти 
