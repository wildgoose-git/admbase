#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;	
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ПредставлениеПериодаРегистрации = КонсолидацияФункцииКлиент.ПолучитьПредставлениеПериодаРегистрации(Объект.ПериодРегистрации);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПредставлениеМесяцНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбработчикЗакрытия = Новый ОписаниеОповещения("ПредставлениеПериодаРегистрацииНачалоВыбораЗавершение", ЭтотОбъект);
	ПараметрыФормы 	   = Новый Структура("Значение, РежимВыбораПериода", Объект.ПериодРегистрации, "МЕСЯЦ");
	
	ОткрытьФорму("ОбщаяФорма.ВыборПериода",
	ПараметрыФормы, 
	ЭтотОбъект, 
	УникальныйИдентификатор,
	,
	, 
	ОбработчикЗакрытия,
	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеМесяцРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	РегулированиеПредставленияПериодаРегистрации(
	Направление,
	СтандартнаяОбработка,
	Объект.ПериодРегистрации,
	ПредставлениеПериодаРегистрации);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеМесяцОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Объект.ПериодРегистрации = '00010101';
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЦеныЗаполнить(Команда)
	
	ЦеныЗаполнитьНаСервере();
	Модифицированность = Истина;
	
КонецПроцедуры

//@skip-check module-structure-form-event-regions
&НаСервере
Процедура ЦеныЗаполнитьНаСервере()
	
	Если Не ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Истина)
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПериодРегистрации",	Объект.ПериодРегистрации);
	
	#Область ТекстЗапроса
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Номенклатура.Ссылка КАК Ссылка,
	|	Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
	|	Номенклатура.ЕдиницаИзмерения КАК ЕдиницаХранения
	|ПОМЕСТИТЬ НоменклатураКРасчету
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.ДляМеню
	|	И Номенклатура.ПометкаУдаления = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураСоставНабора.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ Продукты
	|ИЗ
	|	Справочник.Номенклатура.СоставНабора КАК НоменклатураСоставНабора
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО НоменклатураСоставНабора.Ссылка = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	НоменклатураСоставНабора.Ссылка В
	|			(ВЫБРАТЬ
	|				НоменклатураКРасчету.Ссылка КАК Ссылка
	|			ИЗ
	|				НоменклатураКРасчету КАК НоменклатураКРасчету)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НоменклатураКРасчету.Ссылка
	|ИЗ
	|	НоменклатураКРасчету КАК НоменклатураКРасчету
	|ГДЕ
	|	НоменклатураКРасчету.ВидНоменклатуры = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.Продукты)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
	|ПОМЕСТИТЬ УстановленныеЦены
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ), ) КАК ЦеныНоменклатурыСрезПоследних
	|ГДЕ
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура В
	|			(ВЫБРАТЬ
	|				Продукты.Номенклатура КАК Номенклатура
	|			ИЗ
	|				Продукты КАК Продукты)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗакупкиУПоставщиковОбороты.Номенклатура КАК Номенклатура,
	|	ЗакупкиУПоставщиковОбороты.СтоимостьОборот / ЗакупкиУПоставщиковОбороты.КоличествоОборот КАК СредняяЦена
	|ПОМЕСТИТЬ СредниееЦены
	|ИЗ
	|	РегистрНакопления.ЗакупкиУПоставщиков.Обороты(
	|			НАЧАЛОПЕРИОДА(&ПериодРегистрации, МЕСЯЦ),
	|			КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ),
	|			Авто,
	|			Номенклатура В
	|				(ВЫБРАТЬ
	|					Продукты.Номенклатура КАК Номенклатура
	|				ИЗ
	|					Продукты КАК Продукты)) КАК ЗакупкиУПоставщиковОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Продукты.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(УстановленныеЦены.Цена) КАК Цена,
	|	МАКСИМУМ(СредниееЦены.СредняяЦена) КАК ЦенаЗакупки,
	|	Продукты.Номенклатура.Наименование КАК НоменклатураНаименование
	|ИЗ
	|	Продукты КАК Продукты
	|		ЛЕВОЕ СОЕДИНЕНИЕ УстановленныеЦены КАК УстановленныеЦены
	|		ПО Продукты.Номенклатура = УстановленныеЦены.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ СредниееЦены КАК СредниееЦены
	|		ПО Продукты.Номенклатура = СредниееЦены.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	Продукты.Номенклатура,
	|	Продукты.Номенклатура.Наименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	НоменклатураНаименование";
	
	#КонецОбласти		
	
	Объект.ЦеныПродуктов.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура БлюдаЗаполнитьРасчитать(Команда)
	
	БлюдаЗаполнитьРасчитатьНаСервере();
	Модифицированность = Истина;
	
КонецПроцедуры

//@skip-check module-structure-form-event-regions
&НаСервере
Процедура БлюдаЗаполнитьРасчитатьНаСервере()
	
	Если Не ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Истина)
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЦеныПродуктов",		Объект.ЦеныПродуктов.Выгрузить());
	
	#Область ТекстЗапроса
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Номенклатура.Ссылка КАК Блюдо,
	|	Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ БлюдаКРасчету
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.Блюда)
	|	И Номенклатура.ПометкаУдаления = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НоменклатураСоставНабора.Ссылка КАК Блюдо,
	|	НоменклатураСоставНабора.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА НоменклатураСоставНабора.Номенклатура.ЕдиницаИзмерения = НоменклатураСоставНабора.ЕдиницаИзмерения
	|			ТОГДА НоменклатураСоставНабора.Количество
	|		ИНАЧЕ НоменклатураСоставНабора.Количество * СправочникНоменклатура.СодержитЕдиницХранения
	|	КОНЕЦ КАК Количество,
	|	СправочникНоменклатура.КоличествоБлюд КАК КоличествоБлюд
	|ПОМЕСТИТЬ СоставыБлюд
	|ИЗ
	|	Справочник.Номенклатура.СоставНабора КАК НоменклатураСоставНабора
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО НоменклатураСоставНабора.Ссылка = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	НоменклатураСоставНабора.Ссылка В
	|			(ВЫБРАТЬ
	|				БлюдаКРасчету.Блюдо КАК Блюдо
	|			ИЗ
	|				БлюдаКРасчету КАК БлюдаКРасчету)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УстановкаРасчетЦенНоменклатурыЦеныПродуктов.Номенклатура КАК Номенклатура,
	|	УстановкаРасчетЦенНоменклатурыЦеныПродуктов.Цена КАК Цена,
	|	УстановкаРасчетЦенНоменклатурыЦеныПродуктов.ЦенаЗакупки КАК ЦенаЗакупки
	|ПОМЕСТИТЬ ЦеныПродуктов
	|ИЗ
	|	&ЦеныПродуктов КАК УстановкаРасчетЦенНоменклатурыЦеныПродуктов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоставыБлюд.Блюдо КАК Блюдо,
	|	СУММА(СоставыБлюд.Количество * ЕСТЬNULL(ЦеныПродуктов.Цена, 0)) КАК Стоимость,
	|	СУММА(СоставыБлюд.Количество * ЕСТЬNULL(ЦеныПродуктов.ЦенаЗакупки, 0)) КАК СтоимостьЗакупки,
	|	СоставыБлюд.КоличествоБлюд КАК КоличествоБлюд
	|ПОМЕСТИТЬ СтоимостиСоставляющих
	|ИЗ
	|	СоставыБлюд КАК СоставыБлюд
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЦеныПродуктов КАК ЦеныПродуктов
	|		ПО СоставыБлюд.Номенклатура = ЦеныПродуктов.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	СоставыБлюд.Блюдо,
	|	СоставыБлюд.КоличествоБлюд
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтоимостиСоставляющих.Блюдо КАК Номенклатура,
	|	СтоимостиСоставляющих.Стоимость / СтоимостиСоставляющих.КоличествоБлюд КАК Цена,
	|	СтоимостиСоставляющих.СтоимостьЗакупки / СтоимостиСоставляющих.КоличествоБлюд КАК ЦенаРасчетная
	|ИЗ
	|	СтоимостиСоставляющих КАК СтоимостиСоставляющих";
	
	#КонецОбласти
	
	Объект.ЦеныБлюд.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура МенюЗаполнить(Команда)
	
	МенюЗаполнитьНаСервере();
	Модифицированность = Истина;
	
КонецПроцедуры

//@skip-check module-structure-form-event-regions
&НаСервере
Процедура МенюЗаполнитьНаСервере()
	
	Если Не ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Истина)
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЦеныПродуктов",		Объект.ЦеныПродуктов.Выгрузить());
	Запрос.УстановитьПараметр("ЦеныБлюд",			Объект.ЦеныБлюд.Выгрузить());
	
	#Область ТекстЗапроса
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СоставМеню.Ссылка КАК Меню,
	|	СоставМеню.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА СоставМеню.ЕдиницаИзмерения = НоменклатураСостава.ЕдиницаИзмерения
	|			ТОГДА СоставМеню.Количество
	|		КОГДА ЕСТЬNULL(НоменклатураСостава.ЕдиницаИзмерения.Вес, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СоставМеню.Количество / НоменклатураСостава.ЕдиницаИзмерения.Вес
	|	КОНЕЦ КАК Количество,
	|	СоставМеню.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	НоменклатураСостава.ЕдиницаИзмерения КАК ЕдиницаИзмерения1
	|ПОМЕСТИТЬ СоставМеню
	|ИЗ
	|	Справочник.Номенклатура.СоставНабора КАК СоставМеню
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСостава
	|		ПО СоставМеню.Номенклатура = НоменклатураСостава.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураМеню
	|		ПО СоставМеню.Ссылка = НоменклатураМеню.Ссылка
	|ГДЕ
	|	НоменклатураМеню.ВидНоменклатуры = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.Меню)
	|	И НоменклатураСостава.ПометкаУдаления = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УстановкаРасчетЦенНоменклатурыЦеныПродуктов.Номенклатура КАК Номенклатура,
	|	УстановкаРасчетЦенНоменклатурыЦеныПродуктов.Цена КАК Цена,
	|	УстановкаРасчетЦенНоменклатурыЦеныПродуктов.ЦенаЗакупки КАК ЦенаЗакупки
	|ПОМЕСТИТЬ ЦеныПродуктов
	|ИЗ
	|	&ЦеныПродуктов КАК УстановкаРасчетЦенНоменклатурыЦеныПродуктов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УстановкаРасчетЦенНоменклатурыЦеныБлюд.Номенклатура КАК Номенклатура,
	|	УстановкаРасчетЦенНоменклатурыЦеныБлюд.Цена КАК Цена,
	|	УстановкаРасчетЦенНоменклатурыЦеныБлюд.ЦенаРасчетная КАК ЦенаРасчетная
	|ПОМЕСТИТЬ ЦеныБлюд
	|ИЗ
	|	&ЦеныБлюд КАК УстановкаРасчетЦенНоменклатурыЦеныБлюд
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныПродуктов.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(ЦеныПродуктов.Цена) КАК Цена,
	|	МАКСИМУМ(ЦеныПродуктов.ЦенаЗакупки) КАК ЦенаРасчетная
	|ПОМЕСТИТЬ ТаблицаЦены
	|ИЗ
	|	ЦеныПродуктов КАК ЦеныПродуктов
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦеныПродуктов.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЦеныБлюд.Номенклатура,
	|	МАКСИМУМ(ЦеныБлюд.Цена),
	|	МАКСИМУМ(ЦеныБлюд.ЦенаРасчетная)
	|ИЗ
	|	ЦеныБлюд КАК ЦеныБлюд
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦеныБлюд.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоставМеню.Меню КАК Номенклатура,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаЦены.Цена * СоставМеню.Количество КАК ЧИСЛО(15, 2))) КАК Цена,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаЦены.ЦенаРасчетная * СоставМеню.Количество КАК ЧИСЛО(15, 2))) КАК ЦенаРасчетная
	|ИЗ
	|	СоставМеню КАК СоставМеню
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаЦены КАК ТаблицаЦены
	|		ПО СоставМеню.Номенклатура = ТаблицаЦены.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	СоставМеню.Меню";
	
	
	#КонецОбласти
	
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Номенклатура.Ссылка КАК Ссылка,
	               |	Номенклатура.Наименование КАК Наименование
	               |ПОМЕСТИТЬ ДействующиеМеню
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |ГДЕ
	               |	Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.Меню)
	               |	И НЕ Номенклатура.ПометкаУдаления
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	НоменклатураСоставНабора.Ссылка КАК Меню,
	               |	НоменклатураСоставНабора.Номенклатура КАК Блюдо,
	               |	НоменклатураСоставНабора.Количество КАК Количество,
	               |	НоменклатураСоставНабора.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	НоменклатураСоставНабора.кКал КАК кКал,
	               |	СправочникНоменклатура.ВидНоменклатуры КАК ВидНоменклатуры
	               |ПОМЕСТИТЬ СоставМеню
	               |ИЗ
	               |	Справочник.Номенклатура.СоставНабора КАК НоменклатураСоставНабора
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	               |		ПО НоменклатураСоставНабора.Номенклатура = СправочникНоменклатура.Ссылка
	               |ГДЕ
	               |	НоменклатураСоставНабора.Ссылка В
	               |			(ВЫБРАТЬ
	               |				ДействующиеМеню.Ссылка КАК Ссылка
	               |			ИЗ
	               |				ДействующиеМеню КАК ДействующиеМеню)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	НоменклатураСоставНабора.Ссылка КАК Блюдо,
	               |	НоменклатураСоставНабора.Номенклатура КАК Продукт,
	               |	НоменклатураСоставНабора.Количество КАК Количество,
	               |	НоменклатураСоставНабора.ЕдиницаИзмерения.ЕдиницаПоКлассификатору КАК ЕдиницаИзмерения,
	               |	НоменклатураСоставНабора.кКал КАК кКал,
	               |	СправочникНоменклатура.ВидНоменклатуры КАК ВидНоменклатуры,
	               |	СправочникНоменклатура.ЕдиницаДляРецептов.ЕдиницаПоКлассификатору КАК ЕдиницаДляРецептов,
	               |	СправочникНоменклатура.ЕдиницаИзмерения.ЕдиницаПоКлассификатору КАК ЕдиницаХраннеия,
	               |	ЕСТЬNULL(НоменклатураСоставНабора.ЕдиницаИзмерения.Вес, 0) КАК ВесЕдиницаИзмерения
	               |ПОМЕСТИТЬ Продукты
	               |ИЗ
	               |	Справочник.Номенклатура.СоставНабора КАК НоменклатураСоставНабора
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	               |		ПО НоменклатураСоставНабора.Номенклатура = СправочникНоменклатура.Ссылка
	               |ГДЕ
	               |	НоменклатураСоставНабора.Ссылка В
	               |			(ВЫБРАТЬ
	               |				СоставМеню.Блюдо КАК Блюдо
	               |			ИЗ
	               |				СоставМеню КАК СоставМеню)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	СоставМеню.Блюдо,
	               |	СоставМеню.Блюдо,
	               |	СоставМеню.Количество,
	               |	СоставМеню.ЕдиницаИзмерения,
	               |	СоставМеню.кКал,
	               |	СоставМеню.ВидНоменклатуры,
	               |	СправочникНоменклатура.ЕдиницаДляРецептов,
	               |	СправочникНоменклатура.ЕдиницаИзмерения,
	               |	ЕСТЬNULL(СоставМеню.ЕдиницаИзмерения.Вес, 0)
	               |ИЗ
	               |	СоставМеню КАК СоставМеню
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	               |		ПО СоставМеню.Блюдо = СправочникНоменклатура.Ссылка
	               |ГДЕ
	               |	СоставМеню.ВидНоменклатуры = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.Продукты)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЦеныПродуктов.Номенклатура КАК Номенклатура,
	               |	ЦеныПродуктов.Цена КАК Цена,
	               |	ЦеныПродуктов.ЦенаЗакупки КАК ЦенаЗакупки
	               |ПОМЕСТИТЬ ЦеныПродуктов
	               |ИЗ
	               |	&ЦеныПродуктов КАК ЦеныПродуктов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Продукты.Блюдо КАК Блюдо,
	               |	Продукты.Продукт КАК Продукт,
	               |	Продукты.Количество КАК Количество,
	               |	Продукты.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	Продукты.кКал КАК кКал,
	               |	Продукты.ВидНоменклатуры КАК ВидНоменклатуры,
	               |	Продукты.ЕдиницаДляРецептов КАК ЕдиницаДляРецептов,
	               |	Продукты.ЕдиницаХраннеия КАК ЕдиницаХраннеия,
	               |	ВЫБОР
	               |		КОГДА Продукты.ЕдиницаИзмерения = Продукты.ЕдиницаХраннеия
	               |			ТОГДА ЦеныПродуктов.Цена * Продукты.Количество
	               |		КОГДА Продукты.ВесЕдиницаИзмерения = 0
	               |			ТОГДА 0
	               |		ИНАЧЕ ЦеныПродуктов.Цена * Продукты.Количество / Продукты.ВесЕдиницаИзмерения
	               |	КОНЕЦ КАК Стоимость,
	               |	ВЫБОР
	               |		КОГДА Продукты.ЕдиницаИзмерения = Продукты.ЕдиницаХраннеия
	               |			ТОГДА ЦеныПродуктов.ЦенаЗакупки * Продукты.Количество
	               |		КОГДА Продукты.ВесЕдиницаИзмерения = 0
	               |			ТОГДА 0
	               |		ИНАЧЕ ЦеныПродуктов.ЦенаЗакупки * Продукты.Количество / Продукты.ВесЕдиницаИзмерения
	               |	КОНЕЦ КАК СтоимостьЗакупки
	               |ПОМЕСТИТЬ СтоимостьДетально
	               |ИЗ
	               |	Продукты КАК Продукты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ЦеныПродуктов КАК ЦеныПродуктов
	               |		ПО Продукты.Продукт = ЦеныПродуктов.Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СтоимостьДетально.Блюдо КАК Блюдо,
	               |	СУММА(СтоимостьДетально.Стоимость) КАК Стоимость,
	               |	СУММА(СтоимостьДетально.СтоимостьЗакупки) КАК СтоимостьЗакупки
	               |ПОМЕСТИТЬ СтоимостьБлюда
	               |ИЗ
	               |	СтоимостьДетально КАК СтоимостьДетально
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СтоимостьДетально.Блюдо
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СоставМеню.Меню КАК Номенклатура,
	               |	СУММА(СтоимостьБлюда.Стоимость * СоставМеню.Количество) КАК Цена,
	               |	СУММА(СтоимостьБлюда.СтоимостьЗакупки * СоставМеню.Количество) КАК ЦенаРасчетная
	               |ИЗ
	               |	СоставМеню КАК СоставМеню
	               |		ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьБлюда КАК СтоимостьБлюда
	               |		ПО СоставМеню.Блюдо = СтоимостьБлюда.Блюдо
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СоставМеню.Меню";
	
	Объект.ЦеныМеню.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиРасчет(Команда)
	
	СотрудникиРасчетНаСервере();
	Модифицированность = Истина;
	
КонецПроцедуры

//@skip-check module-structure-form-event-regions
&НаСервере
Процедура СотрудникиРасчетНаСервере()
	
	Если Не ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Истина)
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЦеныМеню",			Объект.ЦеныМеню.Выгрузить());
	Запрос.УстановитьПараметр("ПериодРегистрации",	Объект.ПериодРегистрации);
	
	#Область ТекстЗапроса
	
	Запрос.Текст = "ВЫБРАТЬ
	|	УстановкаРасчетЦенНоменклатурыЦеныМеню.Номенклатура КАК Номенклатура,
	|	УстановкаРасчетЦенНоменклатурыЦеныМеню.Цена КАК Цена,
	|	УстановкаРасчетЦенНоменклатурыЦеныМеню.ЦенаРасчетная КАК ЦенаРасчетная
	|ПОМЕСТИТЬ ЦеныМеню
	|ИЗ
	|	&ЦеныМеню КАК УстановкаРасчетЦенНоменклатурыЦеныМеню
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПосещенияСтоловойPercoОбороты.Сотрудник КАК Сотрудник,
	|	ПосещенияСтоловойPercoОбороты.Меню КАК Меню,
	|	ПосещенияСтоловойPercoОбороты.КоличествоОборот КАК Количество
	|ПОМЕСТИТЬ ПосещенияСтоловой
	|ИЗ
	|	РегистрНакопления.ПосещенияСтоловойPerco.Обороты(НАЧАЛОПЕРИОДА(&ПериодРегистрации, МЕСЯЦ), КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ), , ) КАК ПосещенияСтоловойPercoОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПосещенияСтоловой.Сотрудник КАК Сотрудник,
	|	СУММА(ПосещенияСтоловой.Количество * ЕСТЬNULL(ЦеныМеню.Цена, 0)) КАК Сумма,
	|	СУММА(ПосещенияСтоловой.Количество * ЕСТЬNULL(ЦеныМеню.ЦенаРасчетная, 0)) КАК СуммаРасчетная
	|ИЗ
	|	ПосещенияСтоловой КАК ПосещенияСтоловой
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЦеныМеню КАК ЦеныМеню
	|		ПО ПосещенияСтоловой.Меню = ЦеныМеню.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ПосещенияСтоловой.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПосещенияСтоловой.Сотрудник.Наименование";
	
	#КонецОбласти
	
	Объект.РасчетСотрудники.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры


// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

//@skip-check module-structure-form-event-regions
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//&НаКлиенте
//Функция ПолучитьПредставлениеПериодаРегистрации(ПериодРегистрации, КалендарныйПериод = "Месяц") 
//	
//	Если КалендарныйПериод = "Месяц" Тогда
//		Возврат Формат(ПериодРегистрации, "ДФ='MMMM yyyy'")
//	ИначеЕсли КалендарныйПериод = "Квартал" Тогда
//		
//			Возврат СтрШаблон("%1 - %2",Формат(НачалоКвартала(ПериодРегистрации), "ДФ='MMMM yyyy'"),
//										Формат(КонецКвартала(ПериодРегистрации), "ДФ='MMMM yyyy'"));
//		
//	КонецЕсли;
//	
//КонецФункции

&НаКлиенте
Процедура ПредставлениеПериодаРегистрацииНачалоВыбораЗавершение(ВыбранныйПериод, ДополнительныеПараметры) Экспорт 
	
	Если ВыбранныйПериод <> Неопределено И Объект.ПериодРегистрации <> ВыбранныйПериод Тогда
		
		Объект.ПериодРегистрации = ВыбранныйПериод;
		ПредставлениеПериодаРегистрации = КонсолидацияФункцииКлиент.ПолучитьПредставлениеПериодаРегистрации(Объект.ПериодРегистрации);
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РегулированиеПредставленияПериодаРегистрации(Направление, СтандартнаяОбработка, ПериодРегистрации, ПредставлениеПериодаРегистрации) 
	
	СтандартнаяОбработка = Ложь;
	
	Если Направление = 1 Тогда
		ПериодРегистрации = КонецМесяца(ПериодРегистрации) + 1;
	ИначеЕсли Направление = -1 Тогда
		ПериодРегистрации = НачалоМесяца(ПериодРегистрации - 1);
	КонецЕсли;
	
	ПредставлениеПериодаРегистрации = КонсолидацияФункцииКлиент.ПолучитьПредставлениеПериодаРегистрации(ПериодРегистрации);
	
КонецПроцедуры

#КонецОбласти 