////////////////////////////////////////////////////////////////////////////////
// <Заголовок модуля: краткое описание и условия применения модуля.>
//  
////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Объект.Ответственный = Пользователи.ТекущийПользователь();
		Объект.ПериодРасчета = НачалоМесяца(ДобавитьМесяц(ТекущаяДатаСеанса(), -1 ));
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ЗаполнитьРеквизитыФормы();
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ЗаполнитьСписокПериодаНаКлиенте();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СписокПериодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыВыбораПериода = Новый Структура("НачалоПериода, КонецПериода", НачалоМесяца(Объект.ПериодРасчета), КонецМесяца(Объект.ПериодРасчета));
	ОписаниеОповещения     = Новый ОписаниеОповещения("СписокПериодНачалоВыбораЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборПериода", ПараметрыВыбораПериода, Элементы.СписокПериод, , , , ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура СписокПериодНачалоВыбораЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт 
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ПериодРасчета = РезультатВыбора;
	
	СписокПериод = Формат(Объект.ПериодРасчета, "ДФ='ММММ гггг'");
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Если Не ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Истина);
	КонецЕсли;

	Запрос = Новый Запрос; 
	Запрос.УстановитьПараметр("НачалоПериода", 	НачалоМесяца(Объект.ПериодРасчета));
	Запрос.УстановитьПараметр("КонецПериода", 	КонецМесяца(Объект.ПериодРасчета));

#Область ТекстЗапроса

	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИсторияРазмещенияСотрудниковСрезПервых.Сотрудник КАК Сотрудник,
	|	ИсторияРазмещенияСотрудниковСрезПервых.АдресРегистрации КАК АдресРегистрации,
	|	ИсторияРазмещенияСотрудниковСрезПервых.Комната КАК Комната,
	|	ИсторияРазмещенияСотрудниковСрезПервых.Место КАК Место,
	|	ИсторияРазмещенияСотрудниковСрезПервых.ДатаЗаселения КАК ДатаЗаселения,
	|	ИсторияРазмещенияСотрудниковСрезПервых.СтоимостьПроживания КАК СтоимостьПроживания,
	|	ИсторияРазмещенияСотрудниковСрезПервых.ДатаВыселения КАК ДатаВыселения,
	|	ВЫБОР
	|		КОГДА ИсторияРазмещенияСотрудниковСрезПервых.ДатаЗаселения < &НачалоПериода
	|			ТОГДА &НачалоПериода
	|		ИНАЧЕ ИсторияРазмещенияСотрудниковСрезПервых.ДатаЗаселения
	|	КОНЕЦ КАК ДатаНачала,
	|	ВЫБОР
	|		КОГДА ИсторияРазмещенияСотрудниковСрезПервых.ДатаВыселения = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &КонецПериода
	|		ИНАЧЕ ИсторияРазмещенияСотрудниковСрезПервых.ДатаВыселения
	|	КОНЕЦ КАК ДатаОкончания
	|ПОМЕСТИТЬ ИсторияРазмещения
	|ИЗ
	|	РегистрСведений.ИсторияРазмещенияСотрудников.СрезПервых(&НачалоПериода, ДатаВыселения = ДАТАВРЕМЯ(1, 1, 1)
	|	ИЛИ ДатаВыселения > &НачалоПериода) КАК ИсторияРазмещенияСотрудниковСрезПервых
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИсторияРазмещенияСотрудниковСрезПоследних.Сотрудник,
	|	ИсторияРазмещенияСотрудниковСрезПоследних.АдресРегистрации,
	|	ИсторияРазмещенияСотрудниковСрезПоследних.Комната,
	|	ИсторияРазмещенияСотрудниковСрезПоследних.Место,
	|	ИсторияРазмещенияСотрудниковСрезПоследних.ДатаЗаселения,
	|	ИсторияРазмещенияСотрудниковСрезПоследних.СтоимостьПроживания,
	|	ИсторияРазмещенияСотрудниковСрезПоследних.ДатаВыселения,
	|	ВЫБОР
	|		КОГДА ИсторияРазмещенияСотрудниковСрезПоследних.ДатаЗаселения < &НачалоПериода
	|			ТОГДА &НачалоПериода
	|		ИНАЧЕ ИсторияРазмещенияСотрудниковСрезПоследних.ДатаЗаселения
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ИсторияРазмещенияСотрудниковСрезПоследних.ДатаВыселения = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &КонецПериода
	|		ИНАЧЕ ИсторияРазмещенияСотрудниковСрезПоследних.ДатаВыселения
	|	КОНЕЦ
	|ИЗ
	|	РегистрСведений.ИсторияРазмещенияСотрудников.СрезПоследних(&КонецПериода, ДатаВыселения > &НачалоПериода
	|	ИЛИ ДатаВыселения = ДатаВремя(1, 1, 1)) КАК ИсторияРазмещенияСотрудниковСрезПоследних
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИсторияРазмещенияСотрудников.Сотрудник,
	|	ИсторияРазмещенияСотрудников.АдресРегистрации,
	|	ИсторияРазмещенияСотрудников.Комната,
	|	ИсторияРазмещенияСотрудников.Место,
	|	ИсторияРазмещенияСотрудников.ДатаЗаселения,
	|	ИсторияРазмещенияСотрудников.СтоимостьПроживания,
	|	ИсторияРазмещенияСотрудников.ДатаВыселения,
	|	ВЫБОР
	|		КОГДА ИсторияРазмещенияСотрудников.ДатаЗаселения < &НачалоПериода
	|			ТОГДА &НачалоПериода
	|		ИНАЧЕ ИсторияРазмещенияСотрудников.ДатаЗаселения
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ИсторияРазмещенияСотрудников.ДатаВыселения = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &КонецПериода
	|		ИНАЧЕ ИсторияРазмещенияСотрудников.ДатаВыселения
	|	КОНЕЦ
	|ИЗ
	|	РегистрСведений.ИсторияРазмещенияСотрудников КАК ИсторияРазмещенияСотрудников
	|ГДЕ
	|	ИсторияРазмещенияСотрудников.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АдресРегистрации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтоимостьПроживания.АдресРегистрации КАК АдресРегистрации,
	|	СтоимостьПроживания.Стоимость КАК Стоимость
	|ПОМЕСТИТЬ СтоимостиПроживания
	|ИЗ
	|	РегистрСведений.СтоимостьПроживанияВОбщежитии.СрезПоследних(&НачалоПериода,) КАК СтоимостьПроживания
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АдресРегистрации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсторияРазмещения.Сотрудник КАК Сотрудник,
	|	ИсторияРазмещения.АдресРегистрации КАК АдресРегистрации,
	|	ИсторияРазмещения.Комната КАК Комната,
	|	ИсторияРазмещения.Место КАК Место,
	|	ИсторияРазмещения.ДатаНачала КАК ДатаНачала,
	|	ЕСТЬNULL(СтоимостиПроживания.Стоимость, 0) КАК Стоимость,
	|	ИсторияРазмещения.ДатаОкончания КАК ДатаОкончания,
	|	РАЗНОСТЬДАТ(ИсторияРазмещения.ДатаНачала, ИсторияРазмещения.ДатаОкончания, ДЕНЬ) + 1 КАК КоличествоДней,
	|	ЕСТЬNULL(СтоимостиПроживания.Стоимость, 0) * (РАЗНОСТЬДАТ(ИсторияРазмещения.ДатаНачала,
	|		ИсторияРазмещения.ДатаОкончания, ДЕНЬ) + 1) КАК Всего
	|ИЗ
	|	ИсторияРазмещения КАК ИсторияРазмещения
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтоимостиПроживания КАК СтоимостиПроживания
	|		ПО ИсторияРазмещения.АдресРегистрации = СтоимостиПроживания.АдресРегистрации
	|
	|УПОРЯДОЧИТЬ ПО
	|	АдресРегистрации,
	|	Комната,
	|	Место,
	|	Сотрудник";
	
#КонецОбласти

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Объект.ДетальныеЗаписи.Добавить(),Выборка);
	КонецЦикла;

КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

//@skip-check module-structure-form-event-regions
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьРеквизитыФормы()
	
	
КонецПроцедуры // ЗаполнитьРеквизитыФормы()

&НаКлиенте
Процедура ЗаполнитьСписокПериодаНаКлиенте()
	
	СписокПериод = Формат(Объект.ПериодРасчета, "ДФ='ММММ гггг'");
	
КонецПроцедуры // ЗаполнитьСписокПериодаНаКлиенте()


#КонецОбласти
