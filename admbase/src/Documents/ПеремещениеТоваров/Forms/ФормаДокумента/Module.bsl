#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;	
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ЗаполнитьСлужебныеРеквизиты();

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗаполнитьСлужебныеРеквизиты();
КонецПроцедуры
	
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары	

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	СтрокаТаблицы = Элементы.Товары.ТекущиеДанные;
	СтрокаТаблицы.Вес 		= СтрокаТаблицы.ВесЕдиницы * СтрокаТаблицы.Количество;              
КонецПроцедуры


&НаКлиенте
Процедура  ТоварыЕдиницаИзмеренияПриИзменении(Элемент)
	
	РассчетВесаНоменклатуры(Элементы.Товары.ТекущаяСтрока);
	
	СтрокаТаблицы = Элементы.Товары.ТекущиеДанные;
	СтрокаТаблицы.ВесФакт = СтрокаТаблицы.ВесЕдиницы * СтрокаТаблицы.КоличествоФакт;              

КонецПроцедуры


&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	РассчетВесаНоменклатуры(Элементы.Товары.ТекущаяСтрока);
	
	СтрокаТаблицы = Элементы.Товары.ТекущиеДанные;
	СтрокаТаблицы.ВесФакт = СтрокаТаблицы.ВесЕдиницы * СтрокаТаблицы.КоличествоФакт;              
КонецПроцедуры


#КонецОбласти 

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

//@skip-check module-structure-form-event-regions
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСлужебныеРеквизиты()
	
	СтоловаяФункцииПроцедуры.ЗаполнитьВесЕдиницыИзмерения(Объект.Товары);
		
КонецПроцедуры // ЗаполнитьСлужебныеРеквизиты()

&НаСервере
Процедура РассчетВесаНоменклатуры(Идентификатор)
	СтоловаяФункцииПроцедуры.РассчетВесаНоменклатуры(Идентификатор,Объект,"Товары");
КонецПроцедуры // РассчетВесаНоменклатуры()


#КонецОбласти 
