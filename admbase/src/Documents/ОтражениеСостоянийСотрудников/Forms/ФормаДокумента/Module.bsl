#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Объект.Ссылка.Пустая() Тогда
		 Объект.Дата = НачалоМесяца(Объект.Дата);
	КонецЕсли;

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ОбновлениеРегистраЗаданий",,ЭтотОбъект);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Объект.Дата = НачалоМесяца(Объект.Дата);
	
КонецПроцедуры
	
#КонецОбласти 

#Область ОбработчикиКомандФормы
// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

//@skip-check module-structure-form-event-regions
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ЗагрузитьИзмененныеСостояния(Команда)
	
	Если Объект.Проведен Тогда 
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Необходимо отменить проведение";
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;
	
	ЗагрузкаИсходныхДанныхЗавершение();
	
	Объект.Комментарий = "Загружены измененные состояния";
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура Подобрать(Команда)
	
	//ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ПослеЗакрытияФормыПодбора",ЭтотОбъект,Новый Структура);
	//ОткрытьФорму("Справочник.Сотрудники.Форма.ФормаПодбора",,ЭтотОбъект,,,,ОписаниеОповещенияОЗакрытии);	
	
КонецПроцедуры

#КонецОбласти 


#Область СлужебныеПроцедурыИФункции

#Область ЗагрузкаЗавершение

&НаКлиенте
Процедура ЗагрузкаИсходныхДанныхЗавершение(МассивОшибок = Неопределено,МассивСтруктур=Неопределено)
	
	Если МассивОшибок = Неопределено Тогда
		МассивОшибок = Новый Массив;
	КонецЕсли;
	
	Если МассивСтруктур = Неопределено Тогда
		МассивСтруктур = Новый Массив;
	КонецЕсли;
	
	ИсходныеДанные = ПолучитьИсходныеДанные(Объект.Дата, МассивОшибок, МассивСтруктур);
	
	Если МассивОшибок.Количество() = 0 Тогда

		Объект.ИсходныеДанные.Очистить();
		Для Каждого ЭлементМассива Из ИсходныеДанные Цикл
			ЗаполнитьЗначенияСвойств(Объект.ИсходныеДанные.Добавить(), ЭлементМассива);
		КонецЦикла;
	Иначе
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗакрытияФормыКорректировкаЗагружаемыхДанных", ЭтотОбъект, 
				Новый Структура("МассивСтруктур",МассивСтруктур));
				
		ПараметрыФормы = Новый Структура("МассивОшибок", МассивОшибок);
		
		ОткрытьФорму("Обработка.КорректировкаЗагружаемыхДанных.Форма", ПараметрыФормы, ЭтотОбъект, , , , ОписаниеОповещения); 
		
	КонецЕсли;
	
КонецПроцедуры // ЗагрузкаИсходныхДанныхЗавершение()

&НаСервереБезКонтекста
Функция ПолучитьИсходныеДанные(Дата,МассивОшибок,МассивСтруктур)
	Возврат КонсолидацияЗагрузкаДанных.СформироватьИсходныеДанныеСостоянияСотрудников(Дата,МассивОшибок,МассивСтруктур);
КонецФункции // ПолучитьИсходныеДанные()

&НаКлиенте
Процедура ПослеЗакрытияФормыКорректировкаЗагружаемыхДанных(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	ЗагрузкаИсходныхДанныхЗавершение(Результат, ДополнительныеПараметры.МассивСтруктур);
	
КонецПроцедуры // ПослеЗакрытияФормыКорректировкаЗагружаемыхДанных()
	
#КонецОбласти

// Параметры:
//  РезультатЗакрытия 		- Структура
//  ДополнительныеПараметры - Структура
&НаКлиенте
Процедура ПослеЗакрытияФормыПодбора(РезультатЗакрытия,ДополнительныеПараметры)  Экспорт 

	Если РезультатЗакрытия = Неопределено Тогда
		 Возврат
	КонецЕсли;
	
	Для каждого ЭлементСписка Из РезультатЗакрытия Цикл
	
		 Если Объект.ИсходныеДанные.НайтиСтроки(Новый Структура("Сотрудник",ЭлементСписка.Значение)).Количество() = 0 Тогда
		 
		 	Объект.ИсходныеДанные.Добавить().Сотрудник = ЭлементСписка.Значение
		 
		 КонецЕсли;
	
	КонецЦикла;

КонецПроцедуры // ПослеЗакрытияФормыПодбора()


#КонецОбласти

