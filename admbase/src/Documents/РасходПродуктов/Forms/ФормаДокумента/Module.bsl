
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;	
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	ЗаполнитьСлужебныеРеквизиты();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗаполнитьСлужебныеРеквизиты();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Для каждого  СтрокаТаблицы Из Объект.СоставСтола Цикл
		Если СтрокаТаблицы.КодСтроки = 0 Тогда
			СтрокаТаблицы.КодСтроки = ПолучитьМаксимальныйКодСтроки();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	НоменклатураПриИзмененииНаСервере();
КонецПроцедуры

//@skip-check module-structure-form-event-regions
&НаСервере
Процедура НоменклатураПриИзмененииНаСервере()
	
	Документы.РасходПродуктов.ЗаполнениеПриИзмененииМеню(Объект,Объект.Номенклатура);
		
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовТаблицыФормыСоставСтола	
&НаКлиенте
Процедура СоставСтолаНоменклатураПриИзменении(Элемент)
	РассчетВесаНоменклатуры(Элементы.СоставСтола.ТекущаяСтрока,"СоставСтола");
КонецПроцедуры

&НаКлиенте
Процедура СоставСтолаКоличествоПриИзменении(Элемент)
	СтрокаТаблицы 	= Элементы.СоставСтола.ТекущиеДанные;
	СтрокаТаблицы.Вес 		= СтрокаТаблицы.ВесЕдиницы * СтрокаТаблицы.Количество;
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПродукты

&НаКлиенте
Процедура ПродуктыНоменклатураПриИзменении(Элемент)
	РассчетВесаНоменклатуры(Элементы.Продукты.ТекущаяСтрока,"Продукты");
КонецПроцедуры

&НаКлиенте
Процедура ПродуктыКоличествоПриИзменении(Элемент)
	
	СтрокаТаблицы 	= Элементы.Продукты.ТекущиеДанные;
	СтрокаТаблицы.Вес 		= СтрокаТаблицы.ВесЕдиницы * СтрокаТаблицы.Количество;

КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьСостав(Команда)
	ЗаполнитьСоставНаСервере();
КонецПроцедуры

//@skip-check module-structure-form-event-regions
&НаСервере
Процедура ЗаполнитьСоставНаСервере()

	Документы.РасходПродуктов.ЗаполнениеТабличнойЧастиСоставСтола(Объект);
	
	ЗаполнитьПродуктыНаСервере();
	
КонецПроцедуры // ЗаполнитьСоставНаСервере()

&НаКлиенте
Процедура ЗаполнитьПродукты(Команда)
	ЗаполнитьПродуктыНаСервере();
КонецПроцедуры

//@skip-check module-structure-form-event-regions
&НаСервере
Процедура ЗаполнитьПродуктыНаСервере()
	Документы.РасходПродуктов.ЗаполнениеТабличнойчастиПродукты(Объект);
КонецПроцедуры


// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

//@skip-check module-structure-form-event-regions
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСлужебныеРеквизиты()
	
	СтоловаяФункцииПроцедуры.ЗаполнитьВесЕдиницыИзмерения(Объект.СоставСтола);
	СтоловаяФункцииПроцедуры.ЗаполнитьВесЕдиницыИзмерения(Объект.Продукты);
	
КонецПроцедуры // ЗаполнитьСлужебныеРеквизиты()


&НаКлиенте
Функция ПолучитьМаксимальныйКодСтроки()
	
	КодСтроки = 0;
	Для каждого  СтрокаТаблицы Из Объект.СоставСтола Цикл
		КодСтроки = Макс(КодСтроки,СтрокаТаблицы.КодСтроки)
	КонецЦикла;

	Возврат КодСтроки +1;
	
КонецФункции // ПолучитьМаксимальныйКодСтроки()



&НаСервере
Процедура РассчетВесаНоменклатуры(Идентификатор,ИмяТаблицы)
	
	СтоловаяФункцииПроцедуры.РассчетВесаНоменклатуры(Идентификатор,Объект,ИмяТаблицы);
	
КонецПроцедуры // РассчетВесаНоменклатуры()

#КонецОбласти 
