////////////////////////////////////////////////////////////////////////////////
// <Заголовок модуля: краткое описание и условия применения модуля.>
//  
////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	Документы.ПеремещениеСотрудников.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	Документы.ВыселениеСотрудников.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
КонецПроцедуры

// Для использования в процедуре ДобавитьКомандыСозданияНаОсновании других модулей менеджеров объектов.
// Добавляет в список команд создания на основании этот объект.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
// Возвращаемое значение:
//  СтрокаТаблицыЗначений, Неопределено - описание добавленной команды.
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульСозданиеНаОсновании = ОбщегоНазначения.ОбщийМодуль("СозданиеНаОсновании");
		Возврат МодульСозданиеНаОсновании.ДобавитьКомандуСозданияНаОсновании(КомандыСозданияНаОсновании, Метаданные.Документы.ЗаселениеСотрудников);
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
// 
// Параметры:
//  КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Перемещение товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьДокументовУчетаСотрудников";
	КомандаПечати.Идентификатор = "ПФ_MXL_КарточкаПроживающего";
	КомандаПечати.Представление = НСтр("ru = 'Карточка проживающего'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеДляПечатнойФормыКарточкаПроживающего(ПараметрыПечати, МассивОбъектов) Экспорт
	
	Запрос = Новый Запрос; 
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
#Область ТекстЗапроса
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИсторияРазмещенияСотрудников.АдресРегистрации,
	|	ИсторияРазмещенияСотрудников.ДатаВыселения,
	|	ИсторияРазмещенияСотрудников.ДатаЗаселения,
	|	ИсторияРазмещенияСотрудников.ДокументВыселения,
	|	ИсторияРазмещенияСотрудников.Комната,
	|	ИсторияРазмещенияСотрудников.Место,
	|	ИсторияРазмещенияСотрудников.НомерСтроки,
	|	ИсторияРазмещенияСотрудников.Период,
	|	ИсторияРазмещенияСотрудников.Регистратор,
	|	ИсторияРазмещенияСотрудников.Сотрудник,
	|	ИсторияРазмещенияСотрудников.СтоимостьПроживания
	|ПОМЕСТИТЬ ИсторияЗаселения
	|ИЗ
	|	РегистрСведений.ИсторияРазмещенияСотрудников КАК ИсторияРазмещенияСотрудников
	|ГДЕ
	|	ИсторияРазмещенияСотрудников.Регистратор В (&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СведенияОСотрудниках.Период,
	|	СведенияОСотрудниках.Сотрудник,
	|	СведенияОСотрудниках.СрокДействияРегистрации,
	|	СведенияОСотрудниках.СрокДействияПатента,
	|	СведенияОСотрудниках.ДанныеПаспорта
	|ПОМЕСТИТЬ СведенияОСотрудниках
	|ИЗ
	|	РегистрСведений.СведенияОСотрудниках КАК СведенияОСотрудниках
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИсторияЗаселения КАК ИсторияЗаселения
	|		ПО СведенияОСотрудниках.Сотрудник = ИсторияЗаселения.Сотрудник
	|		И СведенияОСотрудниках.Период <= ИсторияЗаселения.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(СведенияОСотрудниках.Период) КАК Период,
	|	СведенияОСотрудниках.Сотрудник
	|ПОМЕСТИТЬ ОтборСведения
	|ИЗ
	|	СведенияОСотрудниках КАК СведенияОСотрудниках
	|СГРУППИРОВАТЬ ПО
	|	СведенияОСотрудниках.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОСотрудниках.Период,
	|	СведенияОСотрудниках.Сотрудник,
	|	СведенияОСотрудниках.СрокДействияРегистрации,
	|	СведенияОСотрудниках.СрокДействияПатента,
	|	СведенияОСотрудниках.ДанныеПаспорта
	|ПОМЕСТИТЬ СведенияОСотрудникахИтог
	|ИЗ
	|	СведенияОСотрудниках КАК СведенияОСотрудниках
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборСведения КАК ОтборСведения
	|		ПО СведенияОСотрудниках.Период = ОтборСведения.Период
	|		И СведенияОСотрудниках.Сотрудник = ОтборСведения.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Представление(ИсторияЗаселения.АдресРегистрации) КАК МестоПроживания,
	|	Представление(ИсторияЗаселения.АдресРегистрации.АдресРегистрации) КАК АдресРегистрации,
	|	ИсторияЗаселения.ДатаВыселения,
	|	ИсторияЗаселения.ДатаЗаселения,
	|	ИсторияЗаселения.ДокументВыселения,
	|	ИсторияЗаселения.Комната,
	|	ИсторияЗаселения.Комната.Код КАК НомерКомнаты,
	|	ИсторияЗаселения.Место,
	|	ИсторияЗаселения.НомерСтроки,
	|	ИсторияЗаселения.Период,
	|	ИсторияЗаселения.Регистратор КАК Ссылка,
	|	Представление(ИсторияЗаселения.Сотрудник) КАК ФИОСотрудника,
	|	ИсторияЗаселения.СтоимостьПроживания,
	|	СведенияОСотрудникахИтог.ДанныеПаспорта,
	|	СведенияОСотрудникахИтог.СрокДействияПатента,
	|	СведенияОСотрудникахИтог.СрокДействияРегистрации,
	|	КомнатыВагоны.Код КАК КомнатаКод
	|ИЗ
	|	ИсторияЗаселения КАК ИсторияЗаселения
	|		ЛЕВОЕ СОЕДИНЕНИЕ СведенияОСотрудникахИтог КАК СведенияОСотрудникахИтог
	|		ПО ИсторияЗаселения.Сотрудник = СведенияОСотрудникахИтог.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КомнатыВагоны КАК КомнатыВагоны
	|		ПО ИсторияЗаселения.Комната = КомнатыВагоны.Ссылка";
	
#КонецОбласти
	
	Возврат  Запрос.Выполнить();
	
КонецФункции // ДанныеДляПечатнойФормыКарточкаПроживающего()

#КонецОбласти

#КонецЕсли
