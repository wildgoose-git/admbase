#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("МассивКОбъединению") Тогда
		ЗаполнитьСписокПриСоздании(Параметры.МассивКОбъединению);
	КонецЕсли;
	
	УстановитьУсловноеОформление();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокСотрудники	

&НаКлиенте
Процедура СписокСотрудникиПометкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокСотрудники.ТекущиеДанные;
	
	Если ТекущиеДанные.Пометка Тогда
		Для каждого СтрокаТаблицы Из СписокСотрудники Цикл
			СтрокаТаблицы.Пометка = Ложь
		КонецЦикла;
		ТекущиеДанные.Пометка = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьЗамену(Команда)
	
	ВыбранныеСотрудники = СписокСотрудники.НайтиСтроки(Новый Структура("Пометка",Истина));
	Если ВыбранныеСотрудники.Количество() = 0 Тогда 
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не выбран сотрудник";
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;
	
	ВыполнитьЗаменуНаСервере(ВыбранныеСотрудники[0].Сотрудник);
	
	Оповестить("ЗавершениеОбъединенияСотрудников",,ЭтотОбъект);
	
	Закрыть();
	
КонецПроцедуры
	
#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокСотрудникиСотрудник.Имя);
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокСотрудникиКод.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокСотрудники.Пометка");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);


КонецПроцедуры // УстановитьУсловноеОформление()

&НаСервере
Процедура ЗаполнитьСписокПриСоздании(МассивСсылок)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивСсылок",МассивСсылок);
	Запрос.Текст = "ВЫБРАТЬ
	|	Сотрудники.Ссылка КАК Сотрудник,
	|	Сотрудники.Код КАК Код
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|ГДЕ
	|	Сотрудники.Ссылка В(&МассивСсылок)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудники.Код";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пометка = Истина;
	Пока Выборка.Следующий() Цикл
	
		НоваяСтрока = СписокСотрудники.Добавить();
		
		НоваяСтрока.Сотрудник = Выборка.Сотрудник;
		НоваяСтрока.Код = Выборка.Код;
		НоваяСтрока.Пометка = Пометка;
		
		
		Если Пометка Тогда 
			Пометка = Ложь
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьСписокПриСоздании()

&НаСервере
Процедура ВыполнитьЗаменуНаСервере(ОсновнойСотрудник)

	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	//1. Обработка справочников
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаСотрудники",СписокСотрудники.Выгрузить());
	
#Область ТекстЗапроса
	Запрос.Текст = "ВЫБРАТЬ
	|	ТаблицаСотрудники.Пометка КАК Пометка,
	|	ТаблицаСотрудники.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ТаблицаСотрудники
	|ИЗ
	|	&ТаблицаСотрудники КАК ТаблицаСотрудники
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СотрудникиНаименованияЗагрузок.Наименование КАК Наименование
	|ПОМЕСТИТЬ НаименованияСуществующие
	|ИЗ
	|	Справочник.Сотрудники.НаименованияЗагрузок КАК СотрудникиНаименованияЗагрузок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаСотрудники КАК ТаблицаСотрудники
	|		ПО СотрудникиНаименованияЗагрузок.Ссылка = ТаблицаСотрудники.Сотрудник
	|			И (ТаблицаСотрудники.Пометка)
	|
	|СГРУППИРОВАТЬ ПО
	|	СотрудникиНаименованияЗагрузок.Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СотрудникиНаименованияЗагрузок.Наименование КАК Наименование
	|ИЗ
	|	Справочник.Сотрудники.НаименованияЗагрузок КАК СотрудникиНаименованияЗагрузок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаСотрудники КАК ТаблицаСотрудники
	|		ПО СотрудникиНаименованияЗагрузок.Ссылка = ТаблицаСотрудники.Сотрудник
	|			И (ТаблицаСотрудники.Пометка = ЛОЖЬ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ НаименованияСуществующие КАК НаименованияСуществующие
	|		ПО СотрудникиНаименованияЗагрузок.Наименование = НаименованияСуществующие.Наименование
	|ГДЕ
	|	НаименованияСуществующие.Наименование ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	СотрудникиНаименованияЗагрузок.Наименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НаименованияСуществующие";
	
#КонецОбласти
	
	Результат = Запрос.Выполнить();
	
	НачатьТранзакцию();
	Если Не Результат.Пустой() Тогда
		
		СправочникОбъект = ОсновнойСотрудник.ПолучитьОбъект();
	    СправочникОбъект.ОбменДанными.Загрузка = Истина;
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			СправочникОбъект.НаименованияЗагрузок.Добавить().Наименование = Выборка.Наименование
		КонецЦикла;
		
		Попытка
			СправочникОбъект.Записать();
		Исключение
			ОтменитьТранзакцию();
			Возврат;
		КонецПопытки;
		
	КонецЕсли;
	
	Для каждого СтрокаТаблицы Из СписокСотрудники Цикл
		Если Не СтрокаТаблицы.Пометка Тогда
			СправочникОбъект = СтрокаТаблицы.Сотрудник.ПолучитьОбъект();
			СправочникОбъект.ОбменДанными.Загрузка = Истина;
			
			СправочникОбъект.НаименованияЗагрузок.Очистить();
			СправочникОбъект.ПометкаУдаления = Истина;
			
			Попытка
				СправочникОбъект.Записать();
			Исключение
				
				ОтменитьТранзакцию();
				
				СообщениеПользователю = Новый СообщениеПользователю;
				СообщениеПользователю.Текст = ОписаниеОшибки();
				СообщениеПользователю.Сообщить();
				
				Возврат;
				
			КонецПопытки;
			
		КонецЕсли;
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
		
	ЗаменаВДокументахКонтроляВремени(Запрос,ОсновнойСотрудник);
	
	ЗаменаВДокументахСтоловой(Запрос,ОсновнойСотрудник);

КонецПроцедуры // ВыполнитьЗаменуНаСервере()

&НаСервере
Процедура ЗаменаВДокументахКонтроляВремени(Запрос,ОсновнойСотрудник)
	
	Если Не ПравоДоступа("Просмотр",Метаданные.Подсистемы.УчетРабочегоВремени) Тогда
		Возврат
	КонецЕсли;

#Область ТекстЗапроса
	
Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПроходыPercoИсходныеДанные.Ссылка КАК Ссылка,
	|	ПроходыPercoИсходныеДанные.НомерСтроки КАК НомерСтроки,
	|	ПроходыPercoИсходныеДанные.Сотрудник КАК Сотрудник
	|ИЗ
	|	Документ.ПроходыPerco.ИсходныеДанные КАК ПроходыPercoИсходныеДанные
	|ГДЕ
	|	ПроходыPercoИсходныеДанные.Сотрудник В
	|			(ВЫБРАТЬ
	|				ТаблицаСотрудники.Сотрудник КАК Сотрудник
	|			ИЗ
	|				ТаблицаСотрудники КАК ТаблицаСотрудники
	|			ГДЕ
	|				ТаблицаСотрудники.Пометка = ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтклоненияERPИсходныеДанные.Ссылка,
	|	ОтклоненияERPИсходныеДанные.НомерСтроки,
	|	ОтклоненияERPИсходныеДанные.Сотрудник
	|ИЗ
	|	Документ.ОтклоненияERP.ИсходныеДанные КАК ОтклоненияERPИсходныеДанные
	|ГДЕ
	|	ОтклоненияERPИсходныеДанные.Сотрудник В
	|			(ВЫБРАТЬ
	|				ТаблицаСотрудники.Сотрудник КАК Сотрудник
	|			ИЗ
	|				ТаблицаСотрудники КАК ТаблицаСотрудники
	|			ГДЕ
	|				ТаблицаСотрудники.Пометка = ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтражениеСостоянийСотрудниковИсходныеДанные.Ссылка,
	|	ОтражениеСостоянийСотрудниковИсходныеДанные.НомерСтроки,
	|	ОтражениеСостоянийСотрудниковИсходныеДанные.Сотрудник
	|ИЗ
	|	Документ.ОтражениеСостоянийСотрудников.ИсходныеДанные КАК ОтражениеСостоянийСотрудниковИсходныеДанные
	|ГДЕ
	|	ОтражениеСостоянийСотрудниковИсходныеДанные.Сотрудник В
	|			(ВЫБРАТЬ
	|				ТаблицаСотрудники.Сотрудник КАК Сотрудник
	|			ИЗ
	|				ТаблицаСотрудники КАК ТаблицаСотрудники
	|			ГДЕ
	|				ТаблицаСотрудники.Пометка = ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаявкиDMCИсходныеДанные.Ссылка,
	|	ЗаявкиDMCИсходныеДанные.НомерСтроки,
	|	ЗаявкиDMCИсходныеДанные.Сотрудник
	|ИЗ
	|	Документ.ЗаявкиDMC.ИсходныеДанные КАК ЗаявкиDMCИсходныеДанные
	|ГДЕ
	|	ЗаявкиDMCИсходныеДанные.Сотрудник В
	|			(ВЫБРАТЬ
	|				ТаблицаСотрудники.Сотрудник КАК Сотрудник
	|			ИЗ
	|				ТаблицаСотрудники КАК ТаблицаСотрудники
	|			ГДЕ
	|				ТаблицаСотрудники.Пометка = ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НазначениеИндивидуальныхГрафиковИсходныеДанные.Ссылка,
	|	НазначениеИндивидуальныхГрафиковИсходныеДанные.НомерСтроки,
	|	НазначениеИндивидуальныхГрафиковИсходныеДанные.Сотрудник
	|ИЗ
	|	Документ.НазначениеИндивидуальныхГрафиков.ИсходныеДанные КАК НазначениеИндивидуальныхГрафиковИсходныеДанные
	|ГДЕ
	|	НазначениеИндивидуальныхГрафиковИсходныеДанные.Сотрудник В
	|			(ВЫБРАТЬ
	|				ТаблицаСотрудники.Сотрудник КАК Сотрудник
	|			ИЗ
	|				ТаблицаСотрудники КАК ТаблицаСотрудники
	|			ГДЕ
	|				ТаблицаСотрудники.Пометка = ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НазначениеПостоянныхГрафиковИсходныеДанные.Ссылка,
	|	НазначениеПостоянныхГрафиковИсходныеДанные.НомерСтроки,
	|	НазначениеПостоянныхГрафиковИсходныеДанные.Сотрудник
	|ИЗ
	|	Документ.НазначениеПостоянныхГрафиков.ИсходныеДанные КАК НазначениеПостоянныхГрафиковИсходныеДанные
	|ГДЕ
	|	НазначениеПостоянныхГрафиковИсходныеДанные.Сотрудник В
	|			(ВЫБРАТЬ
	|				ТаблицаСотрудники.Сотрудник КАК Сотрудник
	|			ИЗ
	|				ТаблицаСотрудники КАК ТаблицаСотрудники
	|			ГДЕ
	|				ТаблицаСотрудники.Пометка = ЛОЖЬ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОбъяснительнаяЗаписка.Ссылка КАК Ссылка,
	|	ОбъяснительнаяЗаписка.Сотрудник КАК Сотрудник
	|ИЗ
	|	Документ.ОбъяснительнаяЗаписка КАК ОбъяснительнаяЗаписка
	|ГДЕ
	|	ОбъяснительнаяЗаписка.Сотрудник В
	|			(ВЫБРАТЬ
	|				ТаблицаСотрудники.Сотрудник КАК Сотрудник
	|			ИЗ
	|				ТаблицаСотрудники КАК ТаблицаСотрудники
	|			ГДЕ
	|				ТаблицаСотрудники.Пометка = ЛОЖЬ)";
	
#КонецОбласти

	Результат = Запрос.ВыполнитьПакет();
	
	НачатьТранзакцию();
	
	ВыборкаДокумент = Результат[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДокумент.Следующий() Цикл
		
		ДокументОбъект = ВыборкаДокумент.Ссылка.ПолучитьОбъект();
		ДокументОбъект.Проведен = Ложь;
		ДокументОбъект.ОбменДанными.Загрузка = Истина;
		
		Выборка = ВыборкаДокумент.Выбрать();
		Пока Выборка.Следующий() Цикл
			ДокументОбъект.ИсходныеДанные[Выборка.НомерСтроки-1].Сотрудник = ОсновнойСотрудник;
		КонецЦикла;
		
		Попытка
			ДокументОбъект.Записать();
		Исключение
			
			ОтменитьТранзакцию();
			
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = ОписаниеОшибки();
			СообщениеПользователю.Сообщить();
			
			Возврат;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Выборка = Результат[1].Выбрать();
	Пока Выборка.Следующий() Цикл
	    ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.Проведен = Ложь;
		ДокументОбъект.ОбменДанными.Загрузка = Истина;
		ДокументОбъект.Сотрудник = ОсновнойСотрудник;
		
	    Попытка
			ДокументОбъект.Записать();
		Исключение
			
			ОтменитьТранзакцию();
			
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = ОписаниеОшибки();
			СообщениеПользователю.Сообщить();
			
			Возврат;
			
		КонецПопытки;

	КонецЦикла;
	
	ЗафиксироватьТранзакцию();


КонецПроцедуры // ЗаменаВДокументахКонтроляВремени()

&НаСервере
Процедура ЗаменаВДокументахСтоловой(Запрос,ОсновнойСотрудник)

	Если Не ПравоДоступа("Просмотр",Метаданные.Подсистемы.Столовая) Тогда
		Возврат
	КонецЕсли;

#Область ТекстЗапроса
	
Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
|	ИсходныеДанные.Ссылка КАК Ссылка,
|	ИсходныеДанные.НомерСтроки КАК НомерСтроки,
|	ИсходныеДанные.Сотрудник КАК Сотрудник
|ИЗ
|	Документ.СтоловаяPerco.ИсходныеДанные КАК ИсходныеДанные
|ГДЕ
|	ИсходныеДанные.Сотрудник В
|			(ВЫБРАТЬ
|				ТаблицаСотрудники.Сотрудник КАК Сотрудник
|			ИЗ
|				ТаблицаСотрудники КАК ТаблицаСотрудники
|			ГДЕ
|				ТаблицаСотрудники.Пометка = ЛОЖЬ)
|
|УПОРЯДОЧИТЬ ПО
|	Ссылка,
|	НомерСтроки
|ИТОГИ ПО
|	Ссылка";
	
#КонецОбласти

	Результат = Запрос.ВыполнитьПакет();
	
	НачатьТранзакцию();
	
	ВыборкаДокумент = Результат[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДокумент.Следующий() Цикл
		
		ДокументОбъект = ВыборкаДокумент.Ссылка.ПолучитьОбъект();
		ДокументОбъект.Проведен = Ложь;
		ДокументОбъект.ОбменДанными.Загрузка = Истина;
		
		Выборка = ВыборкаДокумент.Выбрать();
		Пока Выборка.Следующий() Цикл
			ДокументОбъект.ИсходныеДанные[Выборка.НомерСтроки-1].Сотрудник = ОсновнойСотрудник;
		КонецЦикла;
		
		Попытка
			ДокументОбъект.Записать();
		Исключение
			
			ОтменитьТранзакцию();
			
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = ОписаниеОшибки();
			СообщениеПользователю.Сообщить();
			
			Возврат;
			
		КонецПопытки;
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();


КонецПроцедуры // ЗаменаВДокументахСтоловой()
	
#КонецОбласти 