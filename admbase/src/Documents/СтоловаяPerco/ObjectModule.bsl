
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
	     Возврат;
	КонецЕсли;
	
	ТекстСообщения = Новый Массив;
	//Если РежимЗаписи = РежимЗаписиДокумента.Проведение И Не КалендарьЗаполнен(ТекстСообщения) Тогда
	//	Отказ = Истина;
	//КонецЕсли;	
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение И Не ПроверкаДвойнойЗаписи(ТекстСообщения) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если ТекстСообщения.Количество() > 0 Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = СтрСоединить(ТекстСообщения,Символы.ПС);
		СообщениеПользователю.Сообщить();
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
#Область ТекстЗапроса
	
Запрос.Текст = "ВЫБРАТЬ
|	СтоловаяPercoИсходныеДанные.Сотрудник КАК Сотрудник,
|	СтоловаяPercoИсходныеДанные.Дата КАК Период,
|	СтоловаяPercoИсходныеДанные.ВидСтола КАК ВидСтола,
|	КалендарьМеню.Меню КАК Меню,
|	Номенклатура.КатегорияМеню КАК КатегорияМеню,
|	1 КАК Количество
|ИЗ
|	Документ.СтоловаяPerco.ИсходныеДанные КАК СтоловаяPercoИсходныеДанные
|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СтоловаяPerco КАК СтоловаяPerco
|		ПО СтоловаяPercoИсходныеДанные.Ссылка = СтоловаяPerco.Ссылка
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КалендарьМеню КАК КалендарьМеню
|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
|			ПО КалендарьМеню.Меню = Номенклатура.Ссылка
|		ПО СтоловаяPercoИсходныеДанные.Дата = КалендарьМеню.Дата
|			И СтоловаяPercoИсходныеДанные.ВидСтола = КалендарьМеню.ВидСтола
|ГДЕ
|	СтоловаяPercoИсходныеДанные.Ссылка = &Ссылка
|	И СтоловаяPercoИсходныеДанные.Сотрудник.ПометкаУдаления = ЛОЖЬ
|
|УПОРЯДОЧИТЬ ПО
|	СтоловаяPercoИсходныеДанные.НомерСтроки";
	
#КонецОбласти

	Движения.ПосещенияСтоловойPerco.Записывать = Истина;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Движения.ПосещенияСтоловойPerco.Добавить(),Выборка)
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПроверкаДвойнойЗаписи(ТекстСообщения)
	
	Если Не ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Истина)
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИсходныеДанные",ИсходныеДанные.Выгрузить()); 
	Запрос.УстановитьПараметр("Регистратор",Ссылка);
	
#Область ТекстЗапроса

Запрос.Текст = "ВЫБРАТЬ
|	СтоловаяPercoИсходныеДанные.Сотрудник КАК Сотрудник,
|	СтоловаяPercoИсходныеДанные.Дата КАК Дата
|ПОМЕСТИТЬ ЗагружаемыеДанные
|ИЗ
|	&ИсходныеДанные КАК СтоловаяPercoИсходныеДанные
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ПосещенияСтоловойPercoОбороты.Сотрудник КАК Сотрудник,
|	ПосещенияСтоловойPercoОбороты.Дата КАК Дата,
|	ПосещенияСтоловойPercoОбороты.КоличествоОборот КАК КоличествоОборот
|ПОМЕСТИТЬ ДанныеРегистра
|ИЗ
|	РегистрНакопления.ПосещенияСтоловойPerco.Обороты(
|			,
|			,
|			Авто,
|			(Сотрудник, Дата) В
|				(ВЫБРАТЬ
|					ЗагружаемыеДанные.Сотрудник КАК Сотрудник,
|					ЗагружаемыеДанные.Дата КАК Дата
|				ИЗ
|					ЗагружаемыеДанные КАК ЗагружаемыеДанные)) КАК ПосещенияСтоловойPercoОбороты
|ГДЕ
|	ПосещенияСтоловойPercoОбороты.Регистратор <> &Регистратор
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ РАЗЛИЧНЫЕ
|	ДанныеРегистра.Сотрудник КАК Сотрудник,
|	ДанныеРегистра.Дата КАК Дата
|ИЗ
|	ДанныеРегистра КАК ДанныеРегистра
|
|УПОРЯДОЧИТЬ ПО
|	Сотрудник,
|	Дата";
	
#КонецОбласти

Результат = Запрос.Выполнить();

Если Результат.Пустой() Тогда
	Возврат Истина
КонецЕсли;

ТекстСообщения.Добавить("ДВОЙНАЯ ЗАГРУЗКА ДАННЫХ ПО СОТРУДНИКАМ");
Выборка = Результат.Выбрать();
Пока Выборка.Следующий() Цикл
	ТекстСообщения.Добавить(СтрШаблон("%1 от %2",Строка(Выборка.Сотрудник),Формат(Выборка.Дата,"ДЛФ=ДД")));
КонецЦикла;

Возврат Ложь;
	
	
КонецФункции // ПроверкаДвойнойЗаписи()

#КонецОбласти 

#КонецЕсли