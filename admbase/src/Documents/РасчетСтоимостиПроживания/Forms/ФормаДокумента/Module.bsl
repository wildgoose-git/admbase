////////////////////////////////////////////////////////////////////////////////
// <Заголовок модуля: краткое описание и условия применения модуля.>
//  
////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Объект.Ответственный = Пользователи.ТекущийПользователь();
		Объект.ПериодРасчета = НачалоМесяца(ДобавитьМесяц(ТекущаяДатаСеанса(), -1 ));
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ЗаполнитьРеквизитыФормы();
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ЗаполнитьСписокПериодаНаКлиенте();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийРеквизитов

#КонецОбласти

#Область ОбработчикиСобытийТаблиц

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Если Не ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Истина);
	КонецЕсли;
	
	//1. На начало переиода получаем все занятые комнаты
	
	













КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

//@skip-check module-structure-form-event-regions
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыФормы()
	
//	Год
//	
//	СписокПериод.Добавить(1,СтрШаблон("январь %1", Формат(Объе)));
	
	
КонецПроцедуры // ЗаполнитьРеквизитыФормы()

&НаКлиенте
Процедура ЗаполнитьСписокПериодаНаКлиенте()
	
	Элементы.СписокПериод.СписокВыбора.Очистить();
	
	ГодСтрокой = Формат(Объект.ПериодРасчета,"ДФ=""гггг""");
	
	Элементы.СписокПериод.СписокВыбора.Добавить(СтрШаблон("январь %1",	ГодСтрокой));
	Элементы.СписокПериод.СписокВыбора.Добавить(СтрШаблон("февраль %1",	ГодСтрокой));
	Элементы.СписокПериод.СписокВыбора.Добавить(СтрШаблон("март %1",	ГодСтрокой));
	Элементы.СписокПериод.СписокВыбора.Добавить(СтрШаблон("апрель %1",	ГодСтрокой));
	Элементы.СписокПериод.СписокВыбора.Добавить(СтрШаблон("май %1",		ГодСтрокой));
	Элементы.СписокПериод.СписокВыбора.Добавить(СтрШаблон("июнь %1",	ГодСтрокой));
	Элементы.СписокПериод.СписокВыбора.Добавить(СтрШаблон("июль %1",	ГодСтрокой));
	Элементы.СписокПериод.СписокВыбора.Добавить(СтрШаблон("август %1",	ГодСтрокой));
	Элементы.СписокПериод.СписокВыбора.Добавить(СтрШаблон("сентябрь %1",ГодСтрокой));
	Элементы.СписокПериод.СписокВыбора.Добавить(СтрШаблон("октябрь %1",	ГодСтрокой));
	Элементы.СписокПериод.СписокВыбора.Добавить(СтрШаблон("ноябрь %1",	ГодСтрокой));
	Элементы.СписокПериод.СписокВыбора.Добавить(СтрШаблон("декабрь %1",	ГодСтрокой));
	
	СписокПериод = Элементы.СписокПериод.СписокВыбора.НайтиПоЗначению(Формат(Объект.ПериодРасчета,"ДФ=""ММММ гггг""")).Значение;
	
КонецПроцедуры // ЗаполнитьСписокПериодаНаКлиенте()


#КонецОбласти
